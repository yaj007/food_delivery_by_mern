{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sayeed\\\\Downloads\\\\PROJECT\\\\food_delivery_by_mern\\\\Frontend\\\\src\\\\pages\\\\Cart.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { useCart } from '../context/CartContext';\n// import { useNavigate } from 'react-router-dom';\n\n// import axios from 'axios';\n\n// const Cart = () => {\n//   const { cartItems, removeFromCart, updateQuantity, clearCart } = useCart();\n//   const [promoCode, setPromoCode] = useState('');\n//   const [discount, setDiscount] = useState(0);\n//   const [promoError, setPromoError] = useState('');\n//   const [cardNumber, setCardNumber] = useState('');\n//   const [expiry, setExpiry] = useState('');\n//   const [cvv, setCvv] = useState('');\n//   const [cardHolder, setCardHolder] = useState('');\n//   const [paymentError, setPaymentError] = useState('');\n//   const [orderId, setOrderId] = useState(null); // Track order ID here\n//   const navigate = useNavigate();\n\n//   if (!cartItems || cartItems.length === 0) {\n//     return (\n//       <div className=\"flex justify-center items-center h-64\">\n//         <p className=\"text-xl text-red-500\">Your cart is empty!</p>\n//       </div>\n//     );\n//   }\n\n//   const total = cartItems.reduce((acc, item) => acc + item.price * item.quantity, 0);\n//   const discountedTotal = total - (total * (discount / 100));\n\n//   const handlePromoCodeSubmit = () => {\n//     const validPromoCodes = {\n//       \"SAVE10\": 10,\n//       \"SAVE20\": 20,\n//       \"FREESHIP\": 5\n//     };\n\n//     if (validPromoCodes[promoCode]) {\n//       setDiscount(validPromoCodes[promoCode]);\n//       setPromoError('');\n//     } else {\n//       setPromoError('Invalid promo code');\n//       setDiscount(0);\n//     }\n//   };\n\n//   // const handlePayment = () => {\n//   //   if (!cardNumber || !expiry || !cvv || !cardHolder) {\n//   //     setPaymentError(\"Please fill out all payment fields.\");\n//   //     return;\n//   //   }\n\n//   //   // Generate a fake order ID\n//   //   const generatedOrderId = Math.floor(Math.random() * 1000000);\n\n//   //   // Update order ID in state\n//   //   setOrderId(generatedOrderId);\n//   //   alert(\"Payment Successful! Your order has been placed.\");\n//   //   clearCart(); // Clear cart after payment\n//   //   setCardNumber('');\n//   //   setExpiry('');\n//   //   setCvv('');\n//   //   setCardHolder('');\n//   //   setPaymentError('');\n//   // };\n//   // In Cart.js, modify the handlePayment function:\n\n// // Modify the handlePayment function in Cart.js\n\n// const handlePayment = async () => {\n//   if (!cardNumber || !expiry || !cvv || !cardHolder) {\n//     setPaymentError(\"Please fill out all payment fields.\");\n//     return;\n//   }\n\n//   try {\n//     // Get user's token for authorization\n//     const token = localStorage.getItem('token');\n//     if (!token) {\n//       navigate('/login');\n//       return;\n//     }\n\n//     // Create order items array from cart items\n//     const orderItems = cartItems.map(item => ({\n//       foodItem: item._id,\n//       quantity: item.quantity,\n//       price: item.price\n//     }));\n\n//     // Calculate total amount (with or without discount)\n//     const totalAmount = discount > 0 ? discountedTotal : total;\n\n//     // Assume the delivery address is the same as user's address\n//     // In a real app, you might want to confirm this or let them choose\n//     const deliveryAddress = {\n//       // You would get this from user profile or let them select during checkout\n//       houseNo: \"User's House No\",\n//       area: \"User's Area\",\n//       city: \"User's City\"\n//     };\n\n//     // Create the order\n//     await axios.post('http://localhost:3001/orders', {\n//       items: orderItems,\n//       totalAmount,\n//       deliveryAddress,\n//       paymentMethod: \"Credit Card\" // Or get this from a selection\n//     }, {\n//       headers: {\n//         Authorization: `Bearer ${token}`\n//       }\n//     });\n\n//     // Generate a fake order ID\n//     const generatedOrderId = Math.floor(Math.random() * 1000000);\n\n//     // Update order ID in state\n//     setOrderId(generatedOrderId);\n//     alert(\"Payment Successful! Your order has been placed.\");\n//     clearCart(); // Clear cart after payment\n\n//     // Reset payment form\n//     setCardNumber('');\n//     setExpiry('');\n//     setCvv('');\n//     setCardHolder('');\n//     setPaymentError('');\n\n//     // Navigate to order history page to see the new order\n//     navigate('/orders');\n//   } catch (error) {\n//     console.error('Error placing order:', error);\n//     setPaymentError('Error processing payment. Please try again.');\n//   }\n// };\n//   return (\n//     <div className=\"p-6\">\n//       <h2 className=\"text-3xl font-bold mb-4\">Your Cart</h2>\n\n//       <div>\n//         {cartItems.map((item) => (\n//           <div key={item._id} className=\"flex justify-between items-center mb-4 bg-gray-800 p-4 rounded-lg\">\n//             <div className=\"flex items-center\">\n//               <img\n//                 src={item.image || 'https://via.placeholder.com/150'}\n//                 alt={item.name}\n//                 className=\"w-16 h-16 object-cover rounded-md\"\n//               />\n//               <div className=\"ml-4\">\n//                 <h3 className=\"text-lg font-semibold text-teal-400\">{item.name}</h3>\n//                 <p className=\"text-sm text-gray-300\">{item.description}</p>\n//               </div>\n//             </div>\n//             <div className=\"flex items-center gap-4\">\n//               <button\n//                 onClick={() => updateQuantity(item._id, 'decrement')}\n//                 className=\"px-2 py-1 bg-teal-600 text-white rounded-full\"\n//               >\n//                 -\n//               </button>\n//               <span className=\"text-xl font-semibold text-white\">{item.quantity}</span>\n//               <button\n//                 onClick={() => updateQuantity(item._id, 'increment')}\n//                 className=\"px-2 py-1 bg-teal-600 text-white rounded-full\"\n//               >\n//                 +\n//               </button>\n//               <span className=\"text-xl\">${(item.price * item.quantity).toFixed(2)}</span>\n//               <button\n//                 onClick={() => removeFromCart(item._id)}\n//                 className=\"px-4 py-2 bg-red-600 text-white rounded-full\"\n//               >\n//                 Remove\n//               </button>\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n\n//       <div className=\"mt-6\">\n//         <label htmlFor=\"promoCode\" className=\"text-lg font-semibold\">Have a promo code?</label>\n//         <div className=\"flex items-center gap-2 mt-2\">\n//           <input\n//             type=\"text\"\n//             id=\"promoCode\"\n//             value={promoCode}\n//             onChange={(e) => setPromoCode(e.target.value)}\n//             className=\"p-2 rounded-lg bg-gray-700 text-white\"\n//             placeholder=\"Enter promo code\"\n//           />\n//           <button\n//             onClick={handlePromoCodeSubmit}\n//             className=\"px-4 py-2 bg-teal-600 text-white rounded-full\"\n//           >\n//             Apply\n//           </button>\n//         </div>\n//         {promoError && <p className=\"text-red-500 mt-2\">{promoError}</p>}\n//       </div>\n\n//       <div className=\"flex justify-between items-center mt-4\">\n//         <p className=\"text-xl font-bold\">Total: ${total.toFixed(2)}</p>\n//         {discount > 0 && (\n//           <p className=\"text-lg text-green-500\">Discount: -${(total * (discount / 100)).toFixed(2)}</p>\n//         )}\n//       </div>\n//       <div className=\"flex justify-between items-center mt-4\">\n//         <p className=\"text-xl font-bold\">Total After Discount: ${discountedTotal.toFixed(2)}</p>\n//       </div>\n\n//       {/* Payment Section */}\n//       <div className=\"mt-8 p-6 bg-gray-900 rounded-lg\">\n//         <h2 className=\"text-2xl font-bold mb-4 text-white\">Payment Details</h2>\n\n//         <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n//           <input\n//             type=\"text\"\n//             placeholder=\"Card Number\"\n//             className=\"p-2 rounded bg-gray-700 text-white\"\n//             value={cardNumber}\n//             onChange={(e) => setCardNumber(e.target.value)}\n//           />\n//           <input\n//             type=\"text\"\n//             placeholder=\"Expiry Date (MM/YY)\"\n//             className=\"p-2 rounded bg-gray-700 text-white\"\n//             value={expiry}\n//             onChange={(e) => setExpiry(e.target.value)}\n//           />\n//           <input\n//             type=\"text\"\n//             placeholder=\"CVV\"\n//             className=\"p-2 rounded bg-gray-700 text-white\"\n//             value={cvv}\n//             onChange={(e) => setCvv(e.target.value)}\n//           />\n//           <input\n//             type=\"text\"\n//             placeholder=\"Cardholder Name\"\n//             className=\"p-2 rounded bg-gray-700 text-white\"\n//             value={cardHolder}\n//             onChange={(e) => setCardHolder(e.target.value)}\n//           />\n//         </div>\n\n//         {paymentError && (\n//           <p className=\"text-red-500 mt-2\">{paymentError}</p>\n//         )}\n\n//         <button\n//           onClick={handlePayment}\n//           className=\"mt-4 px-6 py-2 bg-green-600 text-white rounded-full\"\n//         >\n//           Place Order\n//         </button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Cart;\n// Update Cart.js\n\n// import React, { useState, useEffect } from 'react';\n// import { useCart } from '../context/CartContext';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n\n// const Cart = () => {\n//   const { cartItems, removeFromCart, updateQuantity, clearCart } = useCart();\n//   const [promoCode, setPromoCode] = useState('');\n//   const [discount, setDiscount] = useState(0);\n//   const [discountType, setDiscountType] = useState('percentage'); // Add discount type\n//   const [promoError, setPromoError] = useState('');\n//   const [promoSuccess, setPromoSuccess] = useState(''); // Add success message\n//   const [cardNumber, setCardNumber] = useState('');\n//   const [expiry, setExpiry] = useState('');\n//   const [cvv, setCvv] = useState('');\n//   const [cardHolder, setCardHolder] = useState('');\n//   const [paymentError, setPaymentError] = useState('');\n//   const [orderId, setOrderId] = useState(null);\n//   const [userDiscounts, setUserDiscounts] = useState([]); // Store user's available discounts\n//   const [appliedDiscountId, setAppliedDiscountId] = useState(null); // Track applied discount\n\n//   const navigate = useNavigate();\n\n//   // Fetch user's available discounts when component mounts\n//   useEffect(() => {\n//     fetchUserDiscounts();\n//   }, []);\n\n//   const fetchUserDiscounts = async () => {\n//     try {\n//       const token = localStorage.getItem('token');\n//       if (!token) return;\n\n//       const response = await axios.get('http://localhost:3001/discounts', {\n//         headers: {\n//           Authorization: `Bearer ${token}`\n//         }\n//       });\n\n//       setUserDiscounts(response.data);\n//     } catch (error) {\n//       console.error('Error fetching user discounts:', error);\n//     }\n//   };\n\n//   if (!cartItems || cartItems.length === 0) {\n//     return (\n//       <div className=\"flex justify-center items-center h-64\">\n//         <p className=\"text-xl text-red-500\">Your cart is empty!</p>\n//       </div>\n//     );\n//   }\n\n//   const total = cartItems.reduce((acc, item) => acc + item.price * item.quantity, 0);\n\n//   // Calculate discounted total based on discount type\n//   const discountedTotal = discountType === 'percentage' \n//     ? total - (total * (discount / 100)) \n//     : total - discount;\n\n//   const handlePromoCodeSubmit = async () => {\n//     // Reset states\n//     setPromoError('');\n//     setPromoSuccess('');\n//     setDiscount(0);\n//     setDiscountType('percentage');\n//     setAppliedDiscountId(null);\n\n//     // First check hardcoded promo codes (for backward compatibility)\n//     const hardcodedPromoCodes = {\n//       \"SAVE10\": { amount: 10, type: 'percentage' },\n//       \"SAVE20\": { amount: 20, type: 'percentage' },\n//       \"FREESHIP\": { amount: 5, type: 'percentage' }\n//     };\n\n//     if (hardcodedPromoCodes[promoCode]) {\n//       setDiscount(hardcodedPromoCodes[promoCode].amount);\n//       setDiscountType(hardcodedPromoCodes[promoCode].type);\n//       setPromoSuccess(`Applied! ${hardcodedPromoCodes[promoCode].amount}% discount`);\n//       return;\n//     }\n\n//     // Check against user's available discounts\n//     const matchingDiscount = userDiscounts.find(d => d.code === promoCode);\n\n//     if (matchingDiscount) {\n//       setDiscount(matchingDiscount.amount);\n//       setDiscountType(matchingDiscount.type);\n//       setAppliedDiscountId(matchingDiscount._id);\n\n//       const discountMsg = matchingDiscount.type === 'percentage' \n//         ? `${matchingDiscount.amount}% discount` \n//         : `$${matchingDiscount.amount} discount`;\n\n//       setPromoSuccess(`Applied! ${discountMsg}`);\n//     } else {\n//       setPromoError('Invalid promo code');\n//       setDiscount(0);\n//     }\n//   };\n\n//   const handlePayment = async () => {\n//     if (!cardNumber || !expiry || !cvv || !cardHolder) {\n//       setPaymentError(\"Please fill out all payment fields.\");\n//       return;\n//     }\n\n//     try {\n//       // Get user's token for authorization\n//       const token = localStorage.getItem('token');\n//       if (!token) {\n//         navigate('/login');\n//         return;\n//       }\n\n//       // Get user profile to get delivery address\n//       const profileResponse = await axios.get('http://localhost:3001/profile', {\n//         headers: {\n//           Authorization: `Bearer ${token}`\n//         }\n//       });\n\n//       const userAddress = profileResponse.data.address;\n\n//       // Create order items array from cart items\n//       const orderItems = cartItems.map(item => ({\n//         foodItem: item._id,\n//         quantity: item.quantity,\n//         price: item.price\n//       }));\n\n//       // Calculate total amount (with or without discount)\n//       const totalAmount = discount > 0 ? discountedTotal : total;\n\n//       // Create the order\n//       const orderResponse = await axios.post('http://localhost:3001/orders', {\n//         items: orderItems,\n//         totalAmount,\n//         deliveryAddress: userAddress,\n//         paymentMethod: \"Credit Card\",\n//         appliedDiscountId // Include the discount ID if one was applied\n//       }, {\n//         headers: {\n//           Authorization: `Bearer ${token}`\n//         }\n//       });\n\n//       // If a discount was applied, mark it as used\n//       if (appliedDiscountId) {\n//         await axios.put(`http://localhost:3001/discounts/${appliedDiscountId}/use`, {}, {\n//           headers: {\n//             Authorization: `Bearer ${token}`\n//           }\n//         });\n//       }\n\n//       // Update order ID in state\n//       setOrderId(orderResponse.data.order._id);\n//       alert(\"Payment Successful! Your order has been placed.\");\n//       clearCart(); // Clear cart after payment\n\n//       // Reset payment form\n//       setCardNumber('');\n//       setExpiry('');\n//       setCvv('');\n//       setCardHolder('');\n//       setPaymentError('');\n\n//       // Navigate to order history page to see the new order\n//       navigate('/orders');\n//     } catch (error) {\n//       console.error('Error placing order:', error);\n//       setPaymentError('Error processing payment. Please try again.');\n//     }\n//   };\n\n//   return (\n//     <div className=\"p-6\">\n//       <h2 className=\"text-3xl font-bold mb-4\">Your Cart</h2>\n\n//       <div>\n//         {cartItems.map((item) => (\n//           <div key={item._id} className=\"flex justify-between items-center mb-4 bg-gray-800 p-4 rounded-lg\">\n//             <div className=\"flex items-center\">\n//               <img\n//                 src={item.image || 'https://via.placeholder.com/150'}\n//                 alt={item.name}\n//                 className=\"w-16 h-16 object-cover rounded-md\"\n//               />\n//               <div className=\"ml-4\">\n//                 <h3 className=\"text-lg font-semibold text-teal-400\">{item.name}</h3>\n//                 <p className=\"text-sm text-gray-300\">{item.description}</p>\n//               </div>\n//             </div>\n//             <div className=\"flex items-center gap-4\">\n//               <button\n//                 onClick={() => updateQuantity(item._id, 'decrement')}\n//                 className=\"px-2 py-1 bg-teal-600 text-white rounded-full\"\n//                 disabled={item.quantity <= 1}\n//               >\n//                 -\n//               </button>\n//               <span className=\"text-xl font-semibold text-white\">{item.quantity}</span>\n//               <button\n//                 onClick={() => updateQuantity(item._id, 'increment')}\n//                 className=\"px-2 py-1 bg-teal-600 text-white rounded-full\"\n//               >\n//                 +\n//               </button>\n//               <span className=\"text-xl\">${(item.price * item.quantity).toFixed(2)}</span>\n//               <button\n//                 onClick={() => removeFromCart(item._id)}\n//                 className=\"px-4 py-2 bg-red-600 text-white rounded-full\"\n//               >\n//                 Remove\n//               </button>\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n\n//       <div className=\"mt-6\">\n//         <label htmlFor=\"promoCode\" className=\"text-lg font-semibold\">Have a promo code?</label>\n//         <div className=\"flex items-center gap-2 mt-2\">\n//           <input\n//             type=\"text\"\n//             id=\"promoCode\"\n//             value={promoCode}\n//             onChange={(e) => setPromoCode(e.target.value)}\n//             className=\"p-2 rounded-lg bg-gray-700 text-white\"\n//             placeholder=\"Enter promo code\"\n//           />\n//           <button\n//             onClick={handlePromoCodeSubmit}\n//             className=\"px-4 py-2 bg-teal-600 text-white rounded-full\"\n//           >\n//             Apply\n//           </button>\n//         </div>\n//         {promoError && <p className=\"text-red-500 mt-2\">{promoError}</p>}\n//         {promoSuccess && <p className=\"text-green-500 mt-2\">{promoSuccess}</p>}\n//       </div>\n\n//       <div className=\"flex justify-between items-center mt-4\">\n//         <p className=\"text-xl font-bold\">Total: ${total.toFixed(2)}</p>\n//         {discount > 0 && (\n//           <p className=\"text-lg text-green-500\">\n//             Discount: {discountType === 'percentage' ? \n//               `-${discount}% (-$${(total * (discount / 100)).toFixed(2)})` : \n//               `-$${discount.toFixed(2)}`}\n//           </p>\n//         )}\n//       </div>\n//       <div className=\"flex justify-between items-center mt-4\">\n//         <p className=\"text-xl font-bold\">Total After Discount: ${discountedTotal.toFixed(2)}</p>\n//       </div>\n\n//       {/* Payment Section */}\n//       <div className=\"mt-8 p-6 bg-gray-900 rounded-lg\">\n//         <h2 className=\"text-2xl font-bold mb-4 text-white\">Payment Details</h2>\n\n//         <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n//           <input\n//             type=\"text\"\n//             placeholder=\"Card Number\"\n//             className=\"p-2 rounded bg-gray-700 text-white\"\n//             value={cardNumber}\n//             onChange={(e) => setCardNumber(e.target.value)}\n//           />\n//           <input\n//             type=\"text\"\n//             placeholder=\"Expiry Date (MM/YY)\"\n//             className=\"p-2 rounded bg-gray-700 text-white\"\n//             value={expiry}\n//             onChange={(e) => setExpiry(e.target.value)}\n//           />\n//           <input\n//             type=\"text\"\n//             placeholder=\"CVV\"\n//             className=\"p-2 rounded bg-gray-700 text-white\"\n//             value={cvv}\n//             onChange={(e) => setCvv(e.target.value)}\n//           />\n//           <input\n//             type=\"text\"\n//             placeholder=\"Cardholder Name\"\n//             className=\"p-2 rounded bg-gray-700 text-white\"\n//             value={cardHolder}\n//             onChange={(e) => setCardHolder(e.target.value)}\n//           />\n//         </div>\n\n//         {paymentError && (\n//           <p className=\"text-red-500 mt-2\">{paymentError}</p>\n//         )}\n\n//         <button\n//           onClick={handlePayment}\n//           className=\"mt-4 px-6 py-2 bg-green-600 text-white rounded-full\"\n//         >\n//           Place Order\n//         </button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Cart;\n\nimport React, { useState, useEffect } from 'react';\nimport { useCart } from '../context/CartContext';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cart = () => {\n  _s();\n  const {\n    cartItems,\n    removeFromCart,\n    updateQuantity,\n    clearCart\n  } = useCart();\n  const [promoCode, setPromoCode] = useState('');\n  const [discount, setDiscount] = useState(0);\n  const [discountType, setDiscountType] = useState('percentage');\n  const [promoError, setPromoError] = useState('');\n  const [promoSuccess, setPromoSuccess] = useState('');\n  const [cardNumber, setCardNumber] = useState('');\n  const [expiry, setExpiry] = useState('');\n  const [cvv, setCvv] = useState('');\n  const [cardHolder, setCardHolder] = useState('');\n  const [paymentError, setPaymentError] = useState('');\n  const [orderId, setOrderId] = useState(null);\n  const [userDiscounts, setUserDiscounts] = useState([]);\n  const [appliedDiscountId, setAppliedDiscountId] = useState(null);\n\n  // New delivery state\n  const [deliveryMode, setDeliveryMode] = useState('instant');\n  const [scheduledTime, setScheduledTime] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchUserDiscounts();\n  }, []);\n  const fetchUserDiscounts = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) return;\n      const response = await axios.get('http://localhost:3001/discounts', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setUserDiscounts(response.data);\n    } catch (error) {\n      console.error('Error fetching user discounts:', error);\n    }\n  };\n  if (!cartItems || cartItems.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center h-64\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xl text-red-500\",\n        children: \"Your cart is empty!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 626,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 7\n    }, this);\n  }\n  const total = cartItems.reduce((acc, item) => acc + item.price * item.quantity, 0);\n  const discountedTotal = discountType === 'percentage' ? total - total * (discount / 100) : total - discount;\n  const handlePromoCodeSubmit = () => {\n    setPromoError('');\n    setPromoSuccess('');\n    setDiscount(0);\n    setDiscountType('percentage');\n    setAppliedDiscountId(null);\n    const hardcodedPromoCodes = {\n      SAVE10: {\n        amount: 10,\n        type: 'percentage'\n      },\n      SAVE20: {\n        amount: 20,\n        type: 'percentage'\n      },\n      FREESHIP: {\n        amount: 5,\n        type: 'percentage'\n      }\n    };\n    if (hardcodedPromoCodes[promoCode]) {\n      const {\n        amount,\n        type\n      } = hardcodedPromoCodes[promoCode];\n      setDiscount(amount);\n      setDiscountType(type);\n      setPromoSuccess(`Applied! ${amount}% discount`);\n      return;\n    }\n    const matchingDiscount = userDiscounts.find(d => d.code === promoCode);\n    if (matchingDiscount) {\n      setDiscount(matchingDiscount.amount);\n      setDiscountType(matchingDiscount.type);\n      setAppliedDiscountId(matchingDiscount._id);\n      const msg = matchingDiscount.type === 'percentage' ? `${matchingDiscount.amount}% discount` : `$${matchingDiscount.amount} discount`;\n      setPromoSuccess(`Applied! ${msg}`);\n    } else {\n      setPromoError('Invalid promo code');\n    }\n  };\n  const handlePayment = async () => {\n    if (!cardNumber || !expiry || !cvv || !cardHolder) {\n      setPaymentError('Please fill out all payment fields.');\n      return;\n    }\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        navigate('/login');\n        return;\n      }\n      const profileResponse = await axios.get('http://localhost:3001/profile', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const userAddress = profileResponse.data.address;\n      const orderItems = cartItems.map(item => ({\n        foodItem: item._id,\n        quantity: item.quantity,\n        price: item.price\n      }));\n      const totalAmount = discount > 0 ? discountedTotal : total;\n      const orderResponse = await axios.post('http://localhost:3001/orders', {\n        items: orderItems,\n        totalAmount,\n        deliveryAddress: userAddress,\n        paymentMethod: 'Credit Card',\n        appliedDiscountId,\n        deliveryTime: deliveryMode === 'schedule' && scheduledTime ? scheduledTime : null\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (appliedDiscountId) {\n        await axios.put(`http://localhost:3001/discounts/${appliedDiscountId}/use`, {}, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n      }\n      setOrderId(orderResponse.data.order._id);\n      alert('Payment Successful! Your order has been placed.');\n      clearCart();\n      setCardNumber('');\n      setExpiry('');\n      setCvv('');\n      setCardHolder('');\n      setPaymentError('');\n      navigate('/orders');\n    } catch (error) {\n      console.error('Error placing order:', error);\n      setPaymentError('Error processing payment. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-bold mb-4\",\n      children: \"Your Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 757,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: cartItems.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-4 bg-gray-800 p-4 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.image || 'https://via.placeholder.com/150',\n            alt: item.name,\n            className: \"w-16 h-16 object-cover rounded-md\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 766,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ml-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-semibold text-teal-400\",\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 772,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-300\",\n              children: item.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 773,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 771,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 765,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => updateQuantity(item._id, 'decrement'),\n            className: \"px-2 py-1 bg-teal-600 text-white rounded-full\",\n            disabled: item.quantity <= 1,\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 777,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-xl font-semibold text-white\",\n            children: item.quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 784,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => updateQuantity(item._id, 'increment'),\n            className: \"px-2 py-1 bg-teal-600 text-white rounded-full\",\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 785,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-xl\",\n            children: [\"$\", (item.price * item.quantity).toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 791,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeFromCart(item._id),\n            className: \"px-4 py-2 bg-red-600 text-white rounded-full\",\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 792,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 776,\n          columnNumber: 13\n        }, this)]\n      }, item._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 761,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 759,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"promoCode\",\n        className: \"text-lg font-semibold\",\n        children: \"Have a promo code?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 805,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-2 mt-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"promoCode\",\n          value: promoCode,\n          onChange: e => setPromoCode(e.target.value),\n          className: \"p-2 rounded-lg bg-gray-700 text-white\",\n          placeholder: \"Enter promo code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 809,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePromoCodeSubmit,\n          className: \"px-4 py-2 bg-teal-600 text-white rounded-full\",\n          children: \"Apply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 817,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 808,\n        columnNumber: 9\n      }, this), promoError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500 mt-2\",\n        children: promoError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 824,\n        columnNumber: 24\n      }, this), promoSuccess && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-green-500 mt-2\",\n        children: promoSuccess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 825,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 804,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xl font-bold\",\n        children: [\"Total: $\", total.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 830,\n        columnNumber: 9\n      }, this), discount > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-lg text-green-500\",\n        children: [\"Discount:\", ' ', discountType === 'percentage' ? `-${discount}% (-$${(total * (discount / 100)).toFixed(2)})` : `-$${discount.toFixed(2)}`]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 832,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 829,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mt-2\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xl font-bold\",\n        children: [\"Total After Discount: $\", discountedTotal.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 841,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 840,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-8 p-6 bg-gray-900 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-4 text-white\",\n        children: \"Schedule Delivery\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 846,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"mr-4 text-white\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"deliveryMode\",\n            value: \"instant\",\n            checked: deliveryMode === 'instant',\n            onChange: () => setDeliveryMode('instant'),\n            className: \"mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 849,\n            columnNumber: 13\n          }, this), \"Instant Delivery\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 848,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"text-white\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"deliveryMode\",\n            value: \"schedule\",\n            checked: deliveryMode === 'schedule',\n            onChange: () => setDeliveryMode('schedule'),\n            className: \"mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 860,\n            columnNumber: 13\n          }, this), \"Schedule Delivery\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 859,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 847,\n        columnNumber: 9\n      }, this), deliveryMode === 'schedule' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-white mb-2\",\n          children: \"Select Delivery Time:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 874,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"datetime-local\",\n          value: scheduledTime,\n          onChange: e => setScheduledTime(e.target.value),\n          className: \"p-2 bg-gray-700 text-white rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 875,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 873,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 845,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-8 p-6 bg-gray-900 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-4 text-white\",\n        children: \"Payment Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 887,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Card Number\",\n          className: \"p-2 rounded bg-gray-700 text-white\",\n          value: cardNumber,\n          onChange: e => setCardNumber(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 889,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Expiry Date (MM/YY)\",\n          className: \"p-2 rounded bg-gray-700 text-white\",\n          value: expiry,\n          onChange: e => setExpiry(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 896,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"CVV\",\n          className: \"p-2 rounded bg-gray-700 text-white\",\n          value: cvv,\n          onChange: e => setCvv(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 903,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Cardholder Name\",\n          className: \"p-2 rounded bg-gray-700 text-white\",\n          value: cardHolder,\n          onChange: e => setCardHolder(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 910,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 888,\n        columnNumber: 9\n      }, this), paymentError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500 mt-2\",\n        children: paymentError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 919,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePayment,\n        className: \"mt-4 px-6 py-2 bg-green-600 text-white rounded-full\",\n        children: \"Place Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 921,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 886,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 756,\n    columnNumber: 5\n  }, this);\n};\n_s(Cart, \"OucSlS/NmmmxIxHkVnFbCL+SmVg=\", false, function () {\n  return [useCart, useNavigate];\n});\n_c = Cart;\nexport default Cart;\nvar _c;\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["React","useState","useEffect","useCart","axios","useNavigate","jsxDEV","_jsxDEV","Cart","_s","cartItems","removeFromCart","updateQuantity","clearCart","promoCode","setPromoCode","discount","setDiscount","discountType","setDiscountType","promoError","setPromoError","promoSuccess","setPromoSuccess","cardNumber","setCardNumber","expiry","setExpiry","cvv","setCvv","cardHolder","setCardHolder","paymentError","setPaymentError","orderId","setOrderId","userDiscounts","setUserDiscounts","appliedDiscountId","setAppliedDiscountId","deliveryMode","setDeliveryMode","scheduledTime","setScheduledTime","navigate","fetchUserDiscounts","token","localStorage","getItem","response","get","headers","Authorization","data","error","console","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","total","reduce","acc","item","price","quantity","discountedTotal","handlePromoCodeSubmit","hardcodedPromoCodes","SAVE10","amount","type","SAVE20","FREESHIP","matchingDiscount","find","d","code","_id","msg","handlePayment","profileResponse","userAddress","address","orderItems","map","foodItem","totalAmount","orderResponse","post","items","deliveryAddress","paymentMethod","deliveryTime","put","order","alert","src","image","alt","name","description","onClick","disabled","toFixed","htmlFor","id","value","onChange","e","target","placeholder","checked","_c","$RefreshReg$"],"sources":["C:/Users/Sayeed/Downloads/PROJECT/food_delivery_by_mern/Frontend/src/pages/Cart.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { useCart } from '../context/CartContext';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n\r\n// import axios from 'axios';\r\n\r\n// const Cart = () => {\r\n//   const { cartItems, removeFromCart, updateQuantity, clearCart } = useCart();\r\n//   const [promoCode, setPromoCode] = useState('');\r\n//   const [discount, setDiscount] = useState(0);\r\n//   const [promoError, setPromoError] = useState('');\r\n//   const [cardNumber, setCardNumber] = useState('');\r\n//   const [expiry, setExpiry] = useState('');\r\n//   const [cvv, setCvv] = useState('');\r\n//   const [cardHolder, setCardHolder] = useState('');\r\n//   const [paymentError, setPaymentError] = useState('');\r\n//   const [orderId, setOrderId] = useState(null); // Track order ID here\r\n//   const navigate = useNavigate();\r\n\r\n//   if (!cartItems || cartItems.length === 0) {\r\n//     return (\r\n//       <div className=\"flex justify-center items-center h-64\">\r\n//         <p className=\"text-xl text-red-500\">Your cart is empty!</p>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   const total = cartItems.reduce((acc, item) => acc + item.price * item.quantity, 0);\r\n//   const discountedTotal = total - (total * (discount / 100));\r\n\r\n//   const handlePromoCodeSubmit = () => {\r\n//     const validPromoCodes = {\r\n//       \"SAVE10\": 10,\r\n//       \"SAVE20\": 20,\r\n//       \"FREESHIP\": 5\r\n//     };\r\n\r\n//     if (validPromoCodes[promoCode]) {\r\n//       setDiscount(validPromoCodes[promoCode]);\r\n//       setPromoError('');\r\n//     } else {\r\n//       setPromoError('Invalid promo code');\r\n//       setDiscount(0);\r\n//     }\r\n//   };\r\n\r\n//   // const handlePayment = () => {\r\n//   //   if (!cardNumber || !expiry || !cvv || !cardHolder) {\r\n//   //     setPaymentError(\"Please fill out all payment fields.\");\r\n//   //     return;\r\n//   //   }\r\n\r\n//   //   // Generate a fake order ID\r\n//   //   const generatedOrderId = Math.floor(Math.random() * 1000000);\r\n\r\n//   //   // Update order ID in state\r\n//   //   setOrderId(generatedOrderId);\r\n//   //   alert(\"Payment Successful! Your order has been placed.\");\r\n//   //   clearCart(); // Clear cart after payment\r\n//   //   setCardNumber('');\r\n//   //   setExpiry('');\r\n//   //   setCvv('');\r\n//   //   setCardHolder('');\r\n//   //   setPaymentError('');\r\n//   // };\r\n//   // In Cart.js, modify the handlePayment function:\r\n\r\n// // Modify the handlePayment function in Cart.js\r\n\r\n// const handlePayment = async () => {\r\n//   if (!cardNumber || !expiry || !cvv || !cardHolder) {\r\n//     setPaymentError(\"Please fill out all payment fields.\");\r\n//     return;\r\n//   }\r\n\r\n//   try {\r\n//     // Get user's token for authorization\r\n//     const token = localStorage.getItem('token');\r\n//     if (!token) {\r\n//       navigate('/login');\r\n//       return;\r\n//     }\r\n\r\n//     // Create order items array from cart items\r\n//     const orderItems = cartItems.map(item => ({\r\n//       foodItem: item._id,\r\n//       quantity: item.quantity,\r\n//       price: item.price\r\n//     }));\r\n    \r\n//     // Calculate total amount (with or without discount)\r\n//     const totalAmount = discount > 0 ? discountedTotal : total;\r\n\r\n//     // Assume the delivery address is the same as user's address\r\n//     // In a real app, you might want to confirm this or let them choose\r\n//     const deliveryAddress = {\r\n//       // You would get this from user profile or let them select during checkout\r\n//       houseNo: \"User's House No\",\r\n//       area: \"User's Area\",\r\n//       city: \"User's City\"\r\n//     };\r\n\r\n//     // Create the order\r\n//     await axios.post('http://localhost:3001/orders', {\r\n//       items: orderItems,\r\n//       totalAmount,\r\n//       deliveryAddress,\r\n//       paymentMethod: \"Credit Card\" // Or get this from a selection\r\n//     }, {\r\n//       headers: {\r\n//         Authorization: `Bearer ${token}`\r\n//       }\r\n//     });\r\n\r\n//     // Generate a fake order ID\r\n//     const generatedOrderId = Math.floor(Math.random() * 1000000);\r\n\r\n//     // Update order ID in state\r\n//     setOrderId(generatedOrderId);\r\n//     alert(\"Payment Successful! Your order has been placed.\");\r\n//     clearCart(); // Clear cart after payment\r\n    \r\n//     // Reset payment form\r\n//     setCardNumber('');\r\n//     setExpiry('');\r\n//     setCvv('');\r\n//     setCardHolder('');\r\n//     setPaymentError('');\r\n    \r\n//     // Navigate to order history page to see the new order\r\n//     navigate('/orders');\r\n//   } catch (error) {\r\n//     console.error('Error placing order:', error);\r\n//     setPaymentError('Error processing payment. Please try again.');\r\n//   }\r\n// };\r\n//   return (\r\n//     <div className=\"p-6\">\r\n//       <h2 className=\"text-3xl font-bold mb-4\">Your Cart</h2>\r\n\r\n//       <div>\r\n//         {cartItems.map((item) => (\r\n//           <div key={item._id} className=\"flex justify-between items-center mb-4 bg-gray-800 p-4 rounded-lg\">\r\n//             <div className=\"flex items-center\">\r\n//               <img\r\n//                 src={item.image || 'https://via.placeholder.com/150'}\r\n//                 alt={item.name}\r\n//                 className=\"w-16 h-16 object-cover rounded-md\"\r\n//               />\r\n//               <div className=\"ml-4\">\r\n//                 <h3 className=\"text-lg font-semibold text-teal-400\">{item.name}</h3>\r\n//                 <p className=\"text-sm text-gray-300\">{item.description}</p>\r\n//               </div>\r\n//             </div>\r\n//             <div className=\"flex items-center gap-4\">\r\n//               <button\r\n//                 onClick={() => updateQuantity(item._id, 'decrement')}\r\n//                 className=\"px-2 py-1 bg-teal-600 text-white rounded-full\"\r\n//               >\r\n//                 -\r\n//               </button>\r\n//               <span className=\"text-xl font-semibold text-white\">{item.quantity}</span>\r\n//               <button\r\n//                 onClick={() => updateQuantity(item._id, 'increment')}\r\n//                 className=\"px-2 py-1 bg-teal-600 text-white rounded-full\"\r\n//               >\r\n//                 +\r\n//               </button>\r\n//               <span className=\"text-xl\">${(item.price * item.quantity).toFixed(2)}</span>\r\n//               <button\r\n//                 onClick={() => removeFromCart(item._id)}\r\n//                 className=\"px-4 py-2 bg-red-600 text-white rounded-full\"\r\n//               >\r\n//                 Remove\r\n//               </button>\r\n//             </div>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n\r\n//       <div className=\"mt-6\">\r\n//         <label htmlFor=\"promoCode\" className=\"text-lg font-semibold\">Have a promo code?</label>\r\n//         <div className=\"flex items-center gap-2 mt-2\">\r\n//           <input\r\n//             type=\"text\"\r\n//             id=\"promoCode\"\r\n//             value={promoCode}\r\n//             onChange={(e) => setPromoCode(e.target.value)}\r\n//             className=\"p-2 rounded-lg bg-gray-700 text-white\"\r\n//             placeholder=\"Enter promo code\"\r\n//           />\r\n//           <button\r\n//             onClick={handlePromoCodeSubmit}\r\n//             className=\"px-4 py-2 bg-teal-600 text-white rounded-full\"\r\n//           >\r\n//             Apply\r\n//           </button>\r\n//         </div>\r\n//         {promoError && <p className=\"text-red-500 mt-2\">{promoError}</p>}\r\n//       </div>\r\n\r\n//       <div className=\"flex justify-between items-center mt-4\">\r\n//         <p className=\"text-xl font-bold\">Total: ${total.toFixed(2)}</p>\r\n//         {discount > 0 && (\r\n//           <p className=\"text-lg text-green-500\">Discount: -${(total * (discount / 100)).toFixed(2)}</p>\r\n//         )}\r\n//       </div>\r\n//       <div className=\"flex justify-between items-center mt-4\">\r\n//         <p className=\"text-xl font-bold\">Total After Discount: ${discountedTotal.toFixed(2)}</p>\r\n//       </div>\r\n\r\n//       {/* Payment Section */}\r\n//       <div className=\"mt-8 p-6 bg-gray-900 rounded-lg\">\r\n//         <h2 className=\"text-2xl font-bold mb-4 text-white\">Payment Details</h2>\r\n\r\n//         <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Card Number\"\r\n//             className=\"p-2 rounded bg-gray-700 text-white\"\r\n//             value={cardNumber}\r\n//             onChange={(e) => setCardNumber(e.target.value)}\r\n//           />\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Expiry Date (MM/YY)\"\r\n//             className=\"p-2 rounded bg-gray-700 text-white\"\r\n//             value={expiry}\r\n//             onChange={(e) => setExpiry(e.target.value)}\r\n//           />\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"CVV\"\r\n//             className=\"p-2 rounded bg-gray-700 text-white\"\r\n//             value={cvv}\r\n//             onChange={(e) => setCvv(e.target.value)}\r\n//           />\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Cardholder Name\"\r\n//             className=\"p-2 rounded bg-gray-700 text-white\"\r\n//             value={cardHolder}\r\n//             onChange={(e) => setCardHolder(e.target.value)}\r\n//           />\r\n//         </div>\r\n\r\n//         {paymentError && (\r\n//           <p className=\"text-red-500 mt-2\">{paymentError}</p>\r\n//         )}\r\n\r\n//         <button\r\n//           onClick={handlePayment}\r\n//           className=\"mt-4 px-6 py-2 bg-green-600 text-white rounded-full\"\r\n//         >\r\n//           Place Order\r\n//         </button>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Cart;\r\n// Update Cart.js\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import { useCart } from '../context/CartContext';\r\n// import axios from 'axios';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// const Cart = () => {\r\n//   const { cartItems, removeFromCart, updateQuantity, clearCart } = useCart();\r\n//   const [promoCode, setPromoCode] = useState('');\r\n//   const [discount, setDiscount] = useState(0);\r\n//   const [discountType, setDiscountType] = useState('percentage'); // Add discount type\r\n//   const [promoError, setPromoError] = useState('');\r\n//   const [promoSuccess, setPromoSuccess] = useState(''); // Add success message\r\n//   const [cardNumber, setCardNumber] = useState('');\r\n//   const [expiry, setExpiry] = useState('');\r\n//   const [cvv, setCvv] = useState('');\r\n//   const [cardHolder, setCardHolder] = useState('');\r\n//   const [paymentError, setPaymentError] = useState('');\r\n//   const [orderId, setOrderId] = useState(null);\r\n//   const [userDiscounts, setUserDiscounts] = useState([]); // Store user's available discounts\r\n//   const [appliedDiscountId, setAppliedDiscountId] = useState(null); // Track applied discount\r\n  \r\n//   const navigate = useNavigate();\r\n\r\n//   // Fetch user's available discounts when component mounts\r\n//   useEffect(() => {\r\n//     fetchUserDiscounts();\r\n//   }, []);\r\n\r\n//   const fetchUserDiscounts = async () => {\r\n//     try {\r\n//       const token = localStorage.getItem('token');\r\n//       if (!token) return;\r\n\r\n//       const response = await axios.get('http://localhost:3001/discounts', {\r\n//         headers: {\r\n//           Authorization: `Bearer ${token}`\r\n//         }\r\n//       });\r\n      \r\n//       setUserDiscounts(response.data);\r\n//     } catch (error) {\r\n//       console.error('Error fetching user discounts:', error);\r\n//     }\r\n//   };\r\n\r\n//   if (!cartItems || cartItems.length === 0) {\r\n//     return (\r\n//       <div className=\"flex justify-center items-center h-64\">\r\n//         <p className=\"text-xl text-red-500\">Your cart is empty!</p>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   const total = cartItems.reduce((acc, item) => acc + item.price * item.quantity, 0);\r\n  \r\n//   // Calculate discounted total based on discount type\r\n//   const discountedTotal = discountType === 'percentage' \r\n//     ? total - (total * (discount / 100)) \r\n//     : total - discount;\r\n\r\n//   const handlePromoCodeSubmit = async () => {\r\n//     // Reset states\r\n//     setPromoError('');\r\n//     setPromoSuccess('');\r\n//     setDiscount(0);\r\n//     setDiscountType('percentage');\r\n//     setAppliedDiscountId(null);\r\n    \r\n//     // First check hardcoded promo codes (for backward compatibility)\r\n//     const hardcodedPromoCodes = {\r\n//       \"SAVE10\": { amount: 10, type: 'percentage' },\r\n//       \"SAVE20\": { amount: 20, type: 'percentage' },\r\n//       \"FREESHIP\": { amount: 5, type: 'percentage' }\r\n//     };\r\n    \r\n//     if (hardcodedPromoCodes[promoCode]) {\r\n//       setDiscount(hardcodedPromoCodes[promoCode].amount);\r\n//       setDiscountType(hardcodedPromoCodes[promoCode].type);\r\n//       setPromoSuccess(`Applied! ${hardcodedPromoCodes[promoCode].amount}% discount`);\r\n//       return;\r\n//     }\r\n    \r\n//     // Check against user's available discounts\r\n//     const matchingDiscount = userDiscounts.find(d => d.code === promoCode);\r\n    \r\n//     if (matchingDiscount) {\r\n//       setDiscount(matchingDiscount.amount);\r\n//       setDiscountType(matchingDiscount.type);\r\n//       setAppliedDiscountId(matchingDiscount._id);\r\n      \r\n//       const discountMsg = matchingDiscount.type === 'percentage' \r\n//         ? `${matchingDiscount.amount}% discount` \r\n//         : `$${matchingDiscount.amount} discount`;\r\n        \r\n//       setPromoSuccess(`Applied! ${discountMsg}`);\r\n//     } else {\r\n//       setPromoError('Invalid promo code');\r\n//       setDiscount(0);\r\n//     }\r\n//   };\r\n\r\n//   const handlePayment = async () => {\r\n//     if (!cardNumber || !expiry || !cvv || !cardHolder) {\r\n//       setPaymentError(\"Please fill out all payment fields.\");\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       // Get user's token for authorization\r\n//       const token = localStorage.getItem('token');\r\n//       if (!token) {\r\n//         navigate('/login');\r\n//         return;\r\n//       }\r\n\r\n//       // Get user profile to get delivery address\r\n//       const profileResponse = await axios.get('http://localhost:3001/profile', {\r\n//         headers: {\r\n//           Authorization: `Bearer ${token}`\r\n//         }\r\n//       });\r\n      \r\n//       const userAddress = profileResponse.data.address;\r\n\r\n//       // Create order items array from cart items\r\n//       const orderItems = cartItems.map(item => ({\r\n//         foodItem: item._id,\r\n//         quantity: item.quantity,\r\n//         price: item.price\r\n//       }));\r\n      \r\n//       // Calculate total amount (with or without discount)\r\n//       const totalAmount = discount > 0 ? discountedTotal : total;\r\n\r\n//       // Create the order\r\n//       const orderResponse = await axios.post('http://localhost:3001/orders', {\r\n//         items: orderItems,\r\n//         totalAmount,\r\n//         deliveryAddress: userAddress,\r\n//         paymentMethod: \"Credit Card\",\r\n//         appliedDiscountId // Include the discount ID if one was applied\r\n//       }, {\r\n//         headers: {\r\n//           Authorization: `Bearer ${token}`\r\n//         }\r\n//       });\r\n\r\n//       // If a discount was applied, mark it as used\r\n//       if (appliedDiscountId) {\r\n//         await axios.put(`http://localhost:3001/discounts/${appliedDiscountId}/use`, {}, {\r\n//           headers: {\r\n//             Authorization: `Bearer ${token}`\r\n//           }\r\n//         });\r\n//       }\r\n\r\n//       // Update order ID in state\r\n//       setOrderId(orderResponse.data.order._id);\r\n//       alert(\"Payment Successful! Your order has been placed.\");\r\n//       clearCart(); // Clear cart after payment\r\n      \r\n//       // Reset payment form\r\n//       setCardNumber('');\r\n//       setExpiry('');\r\n//       setCvv('');\r\n//       setCardHolder('');\r\n//       setPaymentError('');\r\n      \r\n//       // Navigate to order history page to see the new order\r\n//       navigate('/orders');\r\n//     } catch (error) {\r\n//       console.error('Error placing order:', error);\r\n//       setPaymentError('Error processing payment. Please try again.');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"p-6\">\r\n//       <h2 className=\"text-3xl font-bold mb-4\">Your Cart</h2>\r\n\r\n//       <div>\r\n//         {cartItems.map((item) => (\r\n//           <div key={item._id} className=\"flex justify-between items-center mb-4 bg-gray-800 p-4 rounded-lg\">\r\n//             <div className=\"flex items-center\">\r\n//               <img\r\n//                 src={item.image || 'https://via.placeholder.com/150'}\r\n//                 alt={item.name}\r\n//                 className=\"w-16 h-16 object-cover rounded-md\"\r\n//               />\r\n//               <div className=\"ml-4\">\r\n//                 <h3 className=\"text-lg font-semibold text-teal-400\">{item.name}</h3>\r\n//                 <p className=\"text-sm text-gray-300\">{item.description}</p>\r\n//               </div>\r\n//             </div>\r\n//             <div className=\"flex items-center gap-4\">\r\n//               <button\r\n//                 onClick={() => updateQuantity(item._id, 'decrement')}\r\n//                 className=\"px-2 py-1 bg-teal-600 text-white rounded-full\"\r\n//                 disabled={item.quantity <= 1}\r\n//               >\r\n//                 -\r\n//               </button>\r\n//               <span className=\"text-xl font-semibold text-white\">{item.quantity}</span>\r\n//               <button\r\n//                 onClick={() => updateQuantity(item._id, 'increment')}\r\n//                 className=\"px-2 py-1 bg-teal-600 text-white rounded-full\"\r\n//               >\r\n//                 +\r\n//               </button>\r\n//               <span className=\"text-xl\">${(item.price * item.quantity).toFixed(2)}</span>\r\n//               <button\r\n//                 onClick={() => removeFromCart(item._id)}\r\n//                 className=\"px-4 py-2 bg-red-600 text-white rounded-full\"\r\n//               >\r\n//                 Remove\r\n//               </button>\r\n//             </div>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n\r\n//       <div className=\"mt-6\">\r\n//         <label htmlFor=\"promoCode\" className=\"text-lg font-semibold\">Have a promo code?</label>\r\n//         <div className=\"flex items-center gap-2 mt-2\">\r\n//           <input\r\n//             type=\"text\"\r\n//             id=\"promoCode\"\r\n//             value={promoCode}\r\n//             onChange={(e) => setPromoCode(e.target.value)}\r\n//             className=\"p-2 rounded-lg bg-gray-700 text-white\"\r\n//             placeholder=\"Enter promo code\"\r\n//           />\r\n//           <button\r\n//             onClick={handlePromoCodeSubmit}\r\n//             className=\"px-4 py-2 bg-teal-600 text-white rounded-full\"\r\n//           >\r\n//             Apply\r\n//           </button>\r\n//         </div>\r\n//         {promoError && <p className=\"text-red-500 mt-2\">{promoError}</p>}\r\n//         {promoSuccess && <p className=\"text-green-500 mt-2\">{promoSuccess}</p>}\r\n//       </div>\r\n\r\n//       <div className=\"flex justify-between items-center mt-4\">\r\n//         <p className=\"text-xl font-bold\">Total: ${total.toFixed(2)}</p>\r\n//         {discount > 0 && (\r\n//           <p className=\"text-lg text-green-500\">\r\n//             Discount: {discountType === 'percentage' ? \r\n//               `-${discount}% (-$${(total * (discount / 100)).toFixed(2)})` : \r\n//               `-$${discount.toFixed(2)}`}\r\n//           </p>\r\n//         )}\r\n//       </div>\r\n//       <div className=\"flex justify-between items-center mt-4\">\r\n//         <p className=\"text-xl font-bold\">Total After Discount: ${discountedTotal.toFixed(2)}</p>\r\n//       </div>\r\n\r\n//       {/* Payment Section */}\r\n//       <div className=\"mt-8 p-6 bg-gray-900 rounded-lg\">\r\n//         <h2 className=\"text-2xl font-bold mb-4 text-white\">Payment Details</h2>\r\n\r\n//         <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Card Number\"\r\n//             className=\"p-2 rounded bg-gray-700 text-white\"\r\n//             value={cardNumber}\r\n//             onChange={(e) => setCardNumber(e.target.value)}\r\n//           />\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Expiry Date (MM/YY)\"\r\n//             className=\"p-2 rounded bg-gray-700 text-white\"\r\n//             value={expiry}\r\n//             onChange={(e) => setExpiry(e.target.value)}\r\n//           />\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"CVV\"\r\n//             className=\"p-2 rounded bg-gray-700 text-white\"\r\n//             value={cvv}\r\n//             onChange={(e) => setCvv(e.target.value)}\r\n//           />\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Cardholder Name\"\r\n//             className=\"p-2 rounded bg-gray-700 text-white\"\r\n//             value={cardHolder}\r\n//             onChange={(e) => setCardHolder(e.target.value)}\r\n//           />\r\n//         </div>\r\n\r\n//         {paymentError && (\r\n//           <p className=\"text-red-500 mt-2\">{paymentError}</p>\r\n//         )}\r\n\r\n//         <button\r\n//           onClick={handlePayment}\r\n//           className=\"mt-4 px-6 py-2 bg-green-600 text-white rounded-full\"\r\n//         >\r\n//           Place Order\r\n//         </button>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Cart;\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useCart } from '../context/CartContext';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Cart = () => {\r\n  const { cartItems, removeFromCart, updateQuantity, clearCart } = useCart();\r\n  const [promoCode, setPromoCode] = useState('');\r\n  const [discount, setDiscount] = useState(0);\r\n  const [discountType, setDiscountType] = useState('percentage');\r\n  const [promoError, setPromoError] = useState('');\r\n  const [promoSuccess, setPromoSuccess] = useState('');\r\n  const [cardNumber, setCardNumber] = useState('');\r\n  const [expiry, setExpiry] = useState('');\r\n  const [cvv, setCvv] = useState('');\r\n  const [cardHolder, setCardHolder] = useState('');\r\n  const [paymentError, setPaymentError] = useState('');\r\n  const [orderId, setOrderId] = useState(null);\r\n  const [userDiscounts, setUserDiscounts] = useState([]);\r\n  const [appliedDiscountId, setAppliedDiscountId] = useState(null);\r\n\r\n  // New delivery state\r\n  const [deliveryMode, setDeliveryMode] = useState('instant');\r\n  const [scheduledTime, setScheduledTime] = useState('');\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetchUserDiscounts();\r\n  }, []);\r\n\r\n  const fetchUserDiscounts = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) return;\r\n\r\n      const response = await axios.get('http://localhost:3001/discounts', {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      setUserDiscounts(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching user discounts:', error);\r\n    }\r\n  };\r\n\r\n  if (!cartItems || cartItems.length === 0) {\r\n    return (\r\n      <div className=\"flex justify-center items-center h-64\">\r\n        <p className=\"text-xl text-red-500\">Your cart is empty!</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const total = cartItems.reduce((acc, item) => acc + item.price * item.quantity, 0);\r\n\r\n  const discountedTotal =\r\n    discountType === 'percentage'\r\n      ? total - total * (discount / 100)\r\n      : total - discount;\r\n\r\n  const handlePromoCodeSubmit = () => {\r\n    setPromoError('');\r\n    setPromoSuccess('');\r\n    setDiscount(0);\r\n    setDiscountType('percentage');\r\n    setAppliedDiscountId(null);\r\n\r\n    const hardcodedPromoCodes = {\r\n      SAVE10: { amount: 10, type: 'percentage' },\r\n      SAVE20: { amount: 20, type: 'percentage' },\r\n      FREESHIP: { amount: 5, type: 'percentage' },\r\n    };\r\n\r\n    if (hardcodedPromoCodes[promoCode]) {\r\n      const { amount, type } = hardcodedPromoCodes[promoCode];\r\n      setDiscount(amount);\r\n      setDiscountType(type);\r\n      setPromoSuccess(`Applied! ${amount}% discount`);\r\n      return;\r\n    }\r\n\r\n    const matchingDiscount = userDiscounts.find((d) => d.code === promoCode);\r\n\r\n    if (matchingDiscount) {\r\n      setDiscount(matchingDiscount.amount);\r\n      setDiscountType(matchingDiscount.type);\r\n      setAppliedDiscountId(matchingDiscount._id);\r\n\r\n      const msg =\r\n        matchingDiscount.type === 'percentage'\r\n          ? `${matchingDiscount.amount}% discount`\r\n          : `$${matchingDiscount.amount} discount`;\r\n\r\n      setPromoSuccess(`Applied! ${msg}`);\r\n    } else {\r\n      setPromoError('Invalid promo code');\r\n    }\r\n  };\r\n\r\n  const handlePayment = async () => {\r\n    if (!cardNumber || !expiry || !cvv || !cardHolder) {\r\n      setPaymentError('Please fill out all payment fields.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        navigate('/login');\r\n        return;\r\n      }\r\n\r\n      const profileResponse = await axios.get('http://localhost:3001/profile', {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      const userAddress = profileResponse.data.address;\r\n\r\n      const orderItems = cartItems.map((item) => ({\r\n        foodItem: item._id,\r\n        quantity: item.quantity,\r\n        price: item.price,\r\n      }));\r\n\r\n      const totalAmount = discount > 0 ? discountedTotal : total;\r\n\r\n      const orderResponse = await axios.post(\r\n        'http://localhost:3001/orders',\r\n        {\r\n          items: orderItems,\r\n          totalAmount,\r\n          deliveryAddress: userAddress,\r\n          paymentMethod: 'Credit Card',\r\n          appliedDiscountId,\r\n          deliveryTime:\r\n            deliveryMode === 'schedule' && scheduledTime\r\n              ? scheduledTime\r\n              : null,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      if (appliedDiscountId) {\r\n        await axios.put(\r\n          `http://localhost:3001/discounts/${appliedDiscountId}/use`,\r\n          {},\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          }\r\n        );\r\n      }\r\n\r\n      setOrderId(orderResponse.data.order._id);\r\n      alert('Payment Successful! Your order has been placed.');\r\n      clearCart();\r\n\r\n      setCardNumber('');\r\n      setExpiry('');\r\n      setCvv('');\r\n      setCardHolder('');\r\n      setPaymentError('');\r\n\r\n      navigate('/orders');\r\n    } catch (error) {\r\n      console.error('Error placing order:', error);\r\n      setPaymentError('Error processing payment. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <h2 className=\"text-3xl font-bold mb-4\">Your Cart</h2>\r\n\r\n      <div>\r\n        {cartItems.map((item) => (\r\n          <div\r\n            key={item._id}\r\n            className=\"flex justify-between items-center mb-4 bg-gray-800 p-4 rounded-lg\"\r\n          >\r\n            <div className=\"flex items-center\">\r\n              <img\r\n                src={item.image || 'https://via.placeholder.com/150'}\r\n                alt={item.name}\r\n                className=\"w-16 h-16 object-cover rounded-md\"\r\n              />\r\n              <div className=\"ml-4\">\r\n                <h3 className=\"text-lg font-semibold text-teal-400\">{item.name}</h3>\r\n                <p className=\"text-sm text-gray-300\">{item.description}</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex items-center gap-4\">\r\n              <button\r\n                onClick={() => updateQuantity(item._id, 'decrement')}\r\n                className=\"px-2 py-1 bg-teal-600 text-white rounded-full\"\r\n                disabled={item.quantity <= 1}\r\n              >\r\n                -\r\n              </button>\r\n              <span className=\"text-xl font-semibold text-white\">{item.quantity}</span>\r\n              <button\r\n                onClick={() => updateQuantity(item._id, 'increment')}\r\n                className=\"px-2 py-1 bg-teal-600 text-white rounded-full\"\r\n              >\r\n                +\r\n              </button>\r\n              <span className=\"text-xl\">${(item.price * item.quantity).toFixed(2)}</span>\r\n              <button\r\n                onClick={() => removeFromCart(item._id)}\r\n                className=\"px-4 py-2 bg-red-600 text-white rounded-full\"\r\n              >\r\n                Remove\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Promo Section */}\r\n      <div className=\"mt-6\">\r\n        <label htmlFor=\"promoCode\" className=\"text-lg font-semibold\">\r\n          Have a promo code?\r\n        </label>\r\n        <div className=\"flex items-center gap-2 mt-2\">\r\n          <input\r\n            type=\"text\"\r\n            id=\"promoCode\"\r\n            value={promoCode}\r\n            onChange={(e) => setPromoCode(e.target.value)}\r\n            className=\"p-2 rounded-lg bg-gray-700 text-white\"\r\n            placeholder=\"Enter promo code\"\r\n          />\r\n          <button\r\n            onClick={handlePromoCodeSubmit}\r\n            className=\"px-4 py-2 bg-teal-600 text-white rounded-full\"\r\n          >\r\n            Apply\r\n          </button>\r\n        </div>\r\n        {promoError && <p className=\"text-red-500 mt-2\">{promoError}</p>}\r\n        {promoSuccess && <p className=\"text-green-500 mt-2\">{promoSuccess}</p>}\r\n      </div>\r\n\r\n      {/* Totals */}\r\n      <div className=\"flex justify-between items-center mt-4\">\r\n        <p className=\"text-xl font-bold\">Total: ${total.toFixed(2)}</p>\r\n        {discount > 0 && (\r\n          <p className=\"text-lg text-green-500\">\r\n            Discount:{' '}\r\n            {discountType === 'percentage'\r\n              ? `-${discount}% (-$${(total * (discount / 100)).toFixed(2)})`\r\n              : `-$${discount.toFixed(2)}`}\r\n          </p>\r\n        )}\r\n      </div>\r\n      <div className=\"flex justify-between items-center mt-2\">\r\n        <p className=\"text-xl font-bold\">Total After Discount: ${discountedTotal.toFixed(2)}</p>\r\n      </div>\r\n\r\n      {/* Delivery Scheduling */}\r\n      <div className=\"mt-8 p-6 bg-gray-900 rounded-lg\">\r\n        <h2 className=\"text-2xl font-bold mb-4 text-white\">Schedule Delivery</h2>\r\n        <div className=\"mb-4\">\r\n          <label className=\"mr-4 text-white\">\r\n            <input\r\n              type=\"radio\"\r\n              name=\"deliveryMode\"\r\n              value=\"instant\"\r\n              checked={deliveryMode === 'instant'}\r\n              onChange={() => setDeliveryMode('instant')}\r\n              className=\"mr-2\"\r\n            />\r\n            Instant Delivery\r\n          </label>\r\n          <label className=\"text-white\">\r\n            <input\r\n              type=\"radio\"\r\n              name=\"deliveryMode\"\r\n              value=\"schedule\"\r\n              checked={deliveryMode === 'schedule'}\r\n              onChange={() => setDeliveryMode('schedule')}\r\n              className=\"mr-2\"\r\n            />\r\n            Schedule Delivery\r\n          </label>\r\n        </div>\r\n\r\n        {deliveryMode === 'schedule' && (\r\n          <div className=\"mb-4\">\r\n            <label className=\"block text-white mb-2\">Select Delivery Time:</label>\r\n            <input\r\n              type=\"datetime-local\"\r\n              value={scheduledTime}\r\n              onChange={(e) => setScheduledTime(e.target.value)}\r\n              className=\"p-2 bg-gray-700 text-white rounded\"\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Payment Section */}\r\n      <div className=\"mt-8 p-6 bg-gray-900 rounded-lg\">\r\n        <h2 className=\"text-2xl font-bold mb-4 text-white\">Payment Details</h2>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Card Number\"\r\n            className=\"p-2 rounded bg-gray-700 text-white\"\r\n            value={cardNumber}\r\n            onChange={(e) => setCardNumber(e.target.value)}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Expiry Date (MM/YY)\"\r\n            className=\"p-2 rounded bg-gray-700 text-white\"\r\n            value={expiry}\r\n            onChange={(e) => setExpiry(e.target.value)}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"CVV\"\r\n            className=\"p-2 rounded bg-gray-700 text-white\"\r\n            value={cvv}\r\n            onChange={(e) => setCvv(e.target.value)}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Cardholder Name\"\r\n            className=\"p-2 rounded bg-gray-700 text-white\"\r\n            value={cardHolder}\r\n            onChange={(e) => setCardHolder(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        {paymentError && <p className=\"text-red-500 mt-2\">{paymentError}</p>}\r\n\r\n        <button\r\n          onClick={handlePayment}\r\n          className=\"mt-4 px-6 py-2 bg-green-600 text-white rounded-full\"\r\n        >\r\n          Place Order\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;A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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}