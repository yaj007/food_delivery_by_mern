{"ast":null,"code":"var _jsxFileName = \"E:\\\\11TH\\\\CSE470 project\\\\yasin\\\\food_delivery_by_mern\\\\food_delivery_by_mern\\\\Frontend\\\\src\\\\pages\\\\Cart.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { useCart } from '../context/CartContext';\n// import { useNavigate } from 'react-router-dom';\n\n// import axios from 'axios';\n\n// const Cart = () => {\n//   const { cartItems, removeFromCart, updateQuantity, clearCart } = useCart();\n//   const [promoCode, setPromoCode] = useState('');\n//   const [discount, setDiscount] = useState(0);\n//   const [promoError, setPromoError] = useState('');\n//   const [cardNumber, setCardNumber] = useState('');\n//   const [expiry, setExpiry] = useState('');\n//   const [cvv, setCvv] = useState('');\n//   const [cardHolder, setCardHolder] = useState('');\n//   const [paymentError, setPaymentError] = useState('');\n//   const [orderId, setOrderId] = useState(null); // Track order ID here\n//   const navigate = useNavigate();\n\n//   if (!cartItems || cartItems.length === 0) {\n//     return (\n//       <div className=\"flex justify-center items-center h-64\">\n//         <p className=\"text-xl text-red-500\">Your cart is empty!</p>\n//       </div>\n//     );\n//   }\n\n//   const total = cartItems.reduce((acc, item) => acc + item.price * item.quantity, 0);\n//   const discountedTotal = total - (total * (discount / 100));\n\n//   const handlePromoCodeSubmit = () => {\n//     const validPromoCodes = {\n//       \"SAVE10\": 10,\n//       \"SAVE20\": 20,\n//       \"FREESHIP\": 5\n//     };\n\n//     if (validPromoCodes[promoCode]) {\n//       setDiscount(validPromoCodes[promoCode]);\n//       setPromoError('');\n//     } else {\n//       setPromoError('Invalid promo code');\n//       setDiscount(0);\n//     }\n//   };\n\n//   // const handlePayment = () => {\n//   //   if (!cardNumber || !expiry || !cvv || !cardHolder) {\n//   //     setPaymentError(\"Please fill out all payment fields.\");\n//   //     return;\n//   //   }\n\n//   //   // Generate a fake order ID\n//   //   const generatedOrderId = Math.floor(Math.random() * 1000000);\n\n//   //   // Update order ID in state\n//   //   setOrderId(generatedOrderId);\n//   //   alert(\"Payment Successful! Your order has been placed.\");\n//   //   clearCart(); // Clear cart after payment\n//   //   setCardNumber('');\n//   //   setExpiry('');\n//   //   setCvv('');\n//   //   setCardHolder('');\n//   //   setPaymentError('');\n//   // };\n//   // In Cart.js, modify the handlePayment function:\n\n// // Modify the handlePayment function in Cart.js\n\n// const handlePayment = async () => {\n//   if (!cardNumber || !expiry || !cvv || !cardHolder) {\n//     setPaymentError(\"Please fill out all payment fields.\");\n//     return;\n//   }\n\n//   try {\n//     // Get user's token for authorization\n//     const token = localStorage.getItem('token');\n//     if (!token) {\n//       navigate('/login');\n//       return;\n//     }\n\n//     // Create order items array from cart items\n//     const orderItems = cartItems.map(item => ({\n//       foodItem: item._id,\n//       quantity: item.quantity,\n//       price: item.price\n//     }));\n\n//     // Calculate total amount (with or without discount)\n//     const totalAmount = discount > 0 ? discountedTotal : total;\n\n//     // Assume the delivery address is the same as user's address\n//     // In a real app, you might want to confirm this or let them choose\n//     const deliveryAddress = {\n//       // You would get this from user profile or let them select during checkout\n//       houseNo: \"User's House No\",\n//       area: \"User's Area\",\n//       city: \"User's City\"\n//     };\n\n//     // Create the order\n//     await axios.post('http://localhost:3001/orders', {\n//       items: orderItems,\n//       totalAmount,\n//       deliveryAddress,\n//       paymentMethod: \"Credit Card\" // Or get this from a selection\n//     }, {\n//       headers: {\n//         Authorization: `Bearer ${token}`\n//       }\n//     });\n\n//     // Generate a fake order ID\n//     const generatedOrderId = Math.floor(Math.random() * 1000000);\n\n//     // Update order ID in state\n//     setOrderId(generatedOrderId);\n//     alert(\"Payment Successful! Your order has been placed.\");\n//     clearCart(); // Clear cart after payment\n\n//     // Reset payment form\n//     setCardNumber('');\n//     setExpiry('');\n//     setCvv('');\n//     setCardHolder('');\n//     setPaymentError('');\n\n//     // Navigate to order history page to see the new order\n//     navigate('/orders');\n//   } catch (error) {\n//     console.error('Error placing order:', error);\n//     setPaymentError('Error processing payment. Please try again.');\n//   }\n// };\n//   return (\n//     <div className=\"p-6\">\n//       <h2 className=\"text-3xl font-bold mb-4\">Your Cart</h2>\n\n//       <div>\n//         {cartItems.map((item) => (\n//           <div key={item._id} className=\"flex justify-between items-center mb-4 bg-gray-800 p-4 rounded-lg\">\n//             <div className=\"flex items-center\">\n//               <img\n//                 src={item.image || 'https://via.placeholder.com/150'}\n//                 alt={item.name}\n//                 className=\"w-16 h-16 object-cover rounded-md\"\n//               />\n//               <div className=\"ml-4\">\n//                 <h3 className=\"text-lg font-semibold text-teal-400\">{item.name}</h3>\n//                 <p className=\"text-sm text-gray-300\">{item.description}</p>\n//               </div>\n//             </div>\n//             <div className=\"flex items-center gap-4\">\n//               <button\n//                 onClick={() => updateQuantity(item._id, 'decrement')}\n//                 className=\"px-2 py-1 bg-teal-600 text-white rounded-full\"\n//               >\n//                 -\n//               </button>\n//               <span className=\"text-xl font-semibold text-white\">{item.quantity}</span>\n//               <button\n//                 onClick={() => updateQuantity(item._id, 'increment')}\n//                 className=\"px-2 py-1 bg-teal-600 text-white rounded-full\"\n//               >\n//                 +\n//               </button>\n//               <span className=\"text-xl\">${(item.price * item.quantity).toFixed(2)}</span>\n//               <button\n//                 onClick={() => removeFromCart(item._id)}\n//                 className=\"px-4 py-2 bg-red-600 text-white rounded-full\"\n//               >\n//                 Remove\n//               </button>\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n\n//       <div className=\"mt-6\">\n//         <label htmlFor=\"promoCode\" className=\"text-lg font-semibold\">Have a promo code?</label>\n//         <div className=\"flex items-center gap-2 mt-2\">\n//           <input\n//             type=\"text\"\n//             id=\"promoCode\"\n//             value={promoCode}\n//             onChange={(e) => setPromoCode(e.target.value)}\n//             className=\"p-2 rounded-lg bg-gray-700 text-white\"\n//             placeholder=\"Enter promo code\"\n//           />\n//           <button\n//             onClick={handlePromoCodeSubmit}\n//             className=\"px-4 py-2 bg-teal-600 text-white rounded-full\"\n//           >\n//             Apply\n//           </button>\n//         </div>\n//         {promoError && <p className=\"text-red-500 mt-2\">{promoError}</p>}\n//       </div>\n\n//       <div className=\"flex justify-between items-center mt-4\">\n//         <p className=\"text-xl font-bold\">Total: ${total.toFixed(2)}</p>\n//         {discount > 0 && (\n//           <p className=\"text-lg text-green-500\">Discount: -${(total * (discount / 100)).toFixed(2)}</p>\n//         )}\n//       </div>\n//       <div className=\"flex justify-between items-center mt-4\">\n//         <p className=\"text-xl font-bold\">Total After Discount: ${discountedTotal.toFixed(2)}</p>\n//       </div>\n\n//       {/* Payment Section */}\n//       <div className=\"mt-8 p-6 bg-gray-900 rounded-lg\">\n//         <h2 className=\"text-2xl font-bold mb-4 text-white\">Payment Details</h2>\n\n//         <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n//           <input\n//             type=\"text\"\n//             placeholder=\"Card Number\"\n//             className=\"p-2 rounded bg-gray-700 text-white\"\n//             value={cardNumber}\n//             onChange={(e) => setCardNumber(e.target.value)}\n//           />\n//           <input\n//             type=\"text\"\n//             placeholder=\"Expiry Date (MM/YY)\"\n//             className=\"p-2 rounded bg-gray-700 text-white\"\n//             value={expiry}\n//             onChange={(e) => setExpiry(e.target.value)}\n//           />\n//           <input\n//             type=\"text\"\n//             placeholder=\"CVV\"\n//             className=\"p-2 rounded bg-gray-700 text-white\"\n//             value={cvv}\n//             onChange={(e) => setCvv(e.target.value)}\n//           />\n//           <input\n//             type=\"text\"\n//             placeholder=\"Cardholder Name\"\n//             className=\"p-2 rounded bg-gray-700 text-white\"\n//             value={cardHolder}\n//             onChange={(e) => setCardHolder(e.target.value)}\n//           />\n//         </div>\n\n//         {paymentError && (\n//           <p className=\"text-red-500 mt-2\">{paymentError}</p>\n//         )}\n\n//         <button\n//           onClick={handlePayment}\n//           className=\"mt-4 px-6 py-2 bg-green-600 text-white rounded-full\"\n//         >\n//           Place Order\n//         </button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Cart;\n// Update Cart.js\n\nimport React, { useState, useEffect } from 'react';\nimport { useCart } from '../context/CartContext';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cart = () => {\n  _s();\n  const {\n    cartItems,\n    removeFromCart,\n    updateQuantity,\n    clearCart\n  } = useCart();\n  const [promoCode, setPromoCode] = useState('');\n  const [discount, setDiscount] = useState(0);\n  const [discountType, setDiscountType] = useState('percentage'); // Add discount type\n  const [promoError, setPromoError] = useState('');\n  const [promoSuccess, setPromoSuccess] = useState(''); // Add success message\n  const [cardNumber, setCardNumber] = useState('');\n  const [expiry, setExpiry] = useState('');\n  const [cvv, setCvv] = useState('');\n  const [cardHolder, setCardHolder] = useState('');\n  const [paymentError, setPaymentError] = useState('');\n  const [orderId, setOrderId] = useState(null);\n  const [userDiscounts, setUserDiscounts] = useState([]); // Store user's available discounts\n  const [appliedDiscountId, setAppliedDiscountId] = useState(null); // Track applied discount\n\n  const navigate = useNavigate();\n\n  // Fetch user's available discounts when component mounts\n  useEffect(() => {\n    fetchUserDiscounts();\n  }, []);\n  const fetchUserDiscounts = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) return;\n      const response = await axios.get('http://localhost:3001/discounts', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setUserDiscounts(response.data);\n    } catch (error) {\n      console.error('Error fetching user discounts:', error);\n    }\n  };\n  if (!cartItems || cartItems.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center h-64\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xl text-red-500\",\n        children: \"Your cart is empty!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this);\n  }\n  const total = cartItems.reduce((acc, item) => acc + item.price * item.quantity, 0);\n\n  // Calculate discounted total based on discount type\n  const discountedTotal = discountType === 'percentage' ? total - total * (discount / 100) : total - discount;\n  const handlePromoCodeSubmit = async () => {\n    // Reset states\n    setPromoError('');\n    setPromoSuccess('');\n    setDiscount(0);\n    setDiscountType('percentage');\n    setAppliedDiscountId(null);\n\n    // First check hardcoded promo codes (for backward compatibility)\n    const hardcodedPromoCodes = {\n      \"SAVE10\": {\n        amount: 10,\n        type: 'percentage'\n      },\n      \"SAVE20\": {\n        amount: 20,\n        type: 'percentage'\n      },\n      \"FREESHIP\": {\n        amount: 5,\n        type: 'percentage'\n      }\n    };\n    if (hardcodedPromoCodes[promoCode]) {\n      setDiscount(hardcodedPromoCodes[promoCode].amount);\n      setDiscountType(hardcodedPromoCodes[promoCode].type);\n      setPromoSuccess(`Applied! ${hardcodedPromoCodes[promoCode].amount}% discount`);\n      return;\n    }\n\n    // Check against user's available discounts\n    const matchingDiscount = userDiscounts.find(d => d.code === promoCode);\n    if (matchingDiscount) {\n      setDiscount(matchingDiscount.amount);\n      setDiscountType(matchingDiscount.type);\n      setAppliedDiscountId(matchingDiscount._id);\n      const discountMsg = matchingDiscount.type === 'percentage' ? `${matchingDiscount.amount}% discount` : `$${matchingDiscount.amount} discount`;\n      setPromoSuccess(`Applied! ${discountMsg}`);\n    } else {\n      setPromoError('Invalid promo code');\n      setDiscount(0);\n    }\n  };\n  const handlePayment = async () => {\n    if (!cardNumber || !expiry || !cvv || !cardHolder) {\n      setPaymentError(\"Please fill out all payment fields.\");\n      return;\n    }\n    try {\n      // Get user's token for authorization\n      const token = localStorage.getItem('token');\n      if (!token) {\n        navigate('/login');\n        return;\n      }\n\n      // Get user profile to get delivery address\n      const profileResponse = await axios.get('http://localhost:3001/profile', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const userAddress = profileResponse.data.address;\n\n      // Create order items array from cart items\n      const orderItems = cartItems.map(item => ({\n        foodItem: item._id,\n        quantity: item.quantity,\n        price: item.price\n      }));\n\n      // Calculate total amount (with or without discount)\n      const totalAmount = discount > 0 ? discountedTotal : total;\n\n      // Create the order\n      const orderResponse = await axios.post('http://localhost:3001/orders', {\n        items: orderItems,\n        totalAmount,\n        deliveryAddress: userAddress,\n        paymentMethod: \"Credit Card\",\n        appliedDiscountId // Include the discount ID if one was applied\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n\n      // If a discount was applied, mark it as used\n      if (appliedDiscountId) {\n        await axios.put(`http://localhost:3001/discounts/${appliedDiscountId}/use`, {}, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n      }\n\n      // Update order ID in state\n      setOrderId(orderResponse.data.order._id);\n      alert(\"Payment Successful! Your order has been placed.\");\n      clearCart(); // Clear cart after payment\n\n      // Reset payment form\n      setCardNumber('');\n      setExpiry('');\n      setCvv('');\n      setCardHolder('');\n      setPaymentError('');\n\n      // Navigate to order history page to see the new order\n      navigate('/orders');\n    } catch (error) {\n      console.error('Error placing order:', error);\n      setPaymentError('Error processing payment. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-bold mb-4\",\n      children: \"Your Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: cartItems.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-4 bg-gray-800 p-4 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.image || 'https://via.placeholder.com/150',\n            alt: item.name,\n            className: \"w-16 h-16 object-cover rounded-md\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ml-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-semibold text-teal-400\",\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-300\",\n              children: item.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => updateQuantity(item._id, 'decrement'),\n            className: \"px-2 py-1 bg-teal-600 text-white rounded-full\",\n            disabled: item.quantity <= 1,\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-xl font-semibold text-white\",\n            children: item.quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => updateQuantity(item._id, 'increment'),\n            className: \"px-2 py-1 bg-teal-600 text-white rounded-full\",\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-xl\",\n            children: [\"$\", (item.price * item.quantity).toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeFromCart(item._id),\n            className: \"px-4 py-2 bg-red-600 text-white rounded-full\",\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 13\n        }, this)]\n      }, item._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"promoCode\",\n        className: \"text-lg font-semibold\",\n        children: \"Have a promo code?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-2 mt-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"promoCode\",\n          value: promoCode,\n          onChange: e => setPromoCode(e.target.value),\n          className: \"p-2 rounded-lg bg-gray-700 text-white\",\n          placeholder: \"Enter promo code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePromoCodeSubmit,\n          className: \"px-4 py-2 bg-teal-600 text-white rounded-full\",\n          children: \"Apply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 9\n      }, this), promoError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500 mt-2\",\n        children: promoError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 24\n      }, this), promoSuccess && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-green-500 mt-2\",\n        children: promoSuccess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xl font-bold\",\n        children: [\"Total: $\", total.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 9\n      }, this), discount > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-lg text-green-500\",\n        children: [\"Discount: \", discountType === 'percentage' ? `-${discount}% (-$${(total * (discount / 100)).toFixed(2)})` : `-$${discount.toFixed(2)}`]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mt-4\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xl font-bold\",\n        children: [\"Total After Discount: $\", discountedTotal.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-8 p-6 bg-gray-900 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-4 text-white\",\n        children: \"Payment Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Card Number\",\n          className: \"p-2 rounded bg-gray-700 text-white\",\n          value: cardNumber,\n          onChange: e => setCardNumber(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Expiry Date (MM/YY)\",\n          className: \"p-2 rounded bg-gray-700 text-white\",\n          value: expiry,\n          onChange: e => setExpiry(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"CVV\",\n          className: \"p-2 rounded bg-gray-700 text-white\",\n          value: cvv,\n          onChange: e => setCvv(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Cardholder Name\",\n          className: \"p-2 rounded bg-gray-700 text-white\",\n          value: cardHolder,\n          onChange: e => setCardHolder(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 9\n      }, this), paymentError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500 mt-2\",\n        children: paymentError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePayment,\n        className: \"mt-4 px-6 py-2 bg-green-600 text-white rounded-full\",\n        children: \"Place Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 443,\n    columnNumber: 5\n  }, this);\n};\n_s(Cart, \"R6vNcilOK+Jcg5pk5Zrsr7ysQJI=\", false, function () {\n  return [useCart, useNavigate];\n});\n_c = Cart;\nexport default Cart;\nvar _c;\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["React","useState","useEffect","useCart","axios","useNavigate","jsxDEV","_jsxDEV","Cart","_s","cartItems","removeFromCart","updateQuantity","clearCart","promoCode","setPromoCode","discount","setDiscount","discountType","setDiscountType","promoError","setPromoError","promoSuccess","setPromoSuccess","cardNumber","setCardNumber","expiry","setExpiry","cvv","setCvv","cardHolder","setCardHolder","paymentError","setPaymentError","orderId","setOrderId","userDiscounts","setUserDiscounts","appliedDiscountId","setAppliedDiscountId","navigate","fetchUserDiscounts","token","localStorage","getItem","response","get","headers","Authorization","data","error","console","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","total","reduce","acc","item","price","quantity","discountedTotal","handlePromoCodeSubmit","hardcodedPromoCodes","amount","type","matchingDiscount","find","d","code","_id","discountMsg","handlePayment","profileResponse","userAddress","address","orderItems","map","foodItem","totalAmount","orderResponse","post","items","deliveryAddress","paymentMethod","put","order","alert","src","image","alt","name","description","onClick","disabled","toFixed","htmlFor","id","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["E:/11TH/CSE470 project/yasin/food_delivery_by_mern/food_delivery_by_mern/Frontend/src/pages/Cart.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { useCart } from '../context/CartContext';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n\r\n// import axios from 'axios';\r\n\r\n// const Cart = () => {\r\n//   const { cartItems, removeFromCart, updateQuantity, clearCart } = useCart();\r\n//   const [promoCode, setPromoCode] = useState('');\r\n//   const [discount, setDiscount] = useState(0);\r\n//   const [promoError, setPromoError] = useState('');\r\n//   const [cardNumber, setCardNumber] = useState('');\r\n//   const [expiry, setExpiry] = useState('');\r\n//   const [cvv, setCvv] = useState('');\r\n//   const [cardHolder, setCardHolder] = useState('');\r\n//   const [paymentError, setPaymentError] = useState('');\r\n//   const [orderId, setOrderId] = useState(null); // Track order ID here\r\n//   const navigate = useNavigate();\r\n\r\n//   if (!cartItems || cartItems.length === 0) {\r\n//     return (\r\n//       <div className=\"flex justify-center items-center h-64\">\r\n//         <p className=\"text-xl text-red-500\">Your cart is empty!</p>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   const total = cartItems.reduce((acc, item) => acc + item.price * item.quantity, 0);\r\n//   const discountedTotal = total - (total * (discount / 100));\r\n\r\n//   const handlePromoCodeSubmit = () => {\r\n//     const validPromoCodes = {\r\n//       \"SAVE10\": 10,\r\n//       \"SAVE20\": 20,\r\n//       \"FREESHIP\": 5\r\n//     };\r\n\r\n//     if (validPromoCodes[promoCode]) {\r\n//       setDiscount(validPromoCodes[promoCode]);\r\n//       setPromoError('');\r\n//     } else {\r\n//       setPromoError('Invalid promo code');\r\n//       setDiscount(0);\r\n//     }\r\n//   };\r\n\r\n//   // const handlePayment = () => {\r\n//   //   if (!cardNumber || !expiry || !cvv || !cardHolder) {\r\n//   //     setPaymentError(\"Please fill out all payment fields.\");\r\n//   //     return;\r\n//   //   }\r\n\r\n//   //   // Generate a fake order ID\r\n//   //   const generatedOrderId = Math.floor(Math.random() * 1000000);\r\n\r\n//   //   // Update order ID in state\r\n//   //   setOrderId(generatedOrderId);\r\n//   //   alert(\"Payment Successful! Your order has been placed.\");\r\n//   //   clearCart(); // Clear cart after payment\r\n//   //   setCardNumber('');\r\n//   //   setExpiry('');\r\n//   //   setCvv('');\r\n//   //   setCardHolder('');\r\n//   //   setPaymentError('');\r\n//   // };\r\n//   // In Cart.js, modify the handlePayment function:\r\n\r\n// // Modify the handlePayment function in Cart.js\r\n\r\n// const handlePayment = async () => {\r\n//   if (!cardNumber || !expiry || !cvv || !cardHolder) {\r\n//     setPaymentError(\"Please fill out all payment fields.\");\r\n//     return;\r\n//   }\r\n\r\n//   try {\r\n//     // Get user's token for authorization\r\n//     const token = localStorage.getItem('token');\r\n//     if (!token) {\r\n//       navigate('/login');\r\n//       return;\r\n//     }\r\n\r\n//     // Create order items array from cart items\r\n//     const orderItems = cartItems.map(item => ({\r\n//       foodItem: item._id,\r\n//       quantity: item.quantity,\r\n//       price: item.price\r\n//     }));\r\n    \r\n//     // Calculate total amount (with or without discount)\r\n//     const totalAmount = discount > 0 ? discountedTotal : total;\r\n\r\n//     // Assume the delivery address is the same as user's address\r\n//     // In a real app, you might want to confirm this or let them choose\r\n//     const deliveryAddress = {\r\n//       // You would get this from user profile or let them select during checkout\r\n//       houseNo: \"User's House No\",\r\n//       area: \"User's Area\",\r\n//       city: \"User's City\"\r\n//     };\r\n\r\n//     // Create the order\r\n//     await axios.post('http://localhost:3001/orders', {\r\n//       items: orderItems,\r\n//       totalAmount,\r\n//       deliveryAddress,\r\n//       paymentMethod: \"Credit Card\" // Or get this from a selection\r\n//     }, {\r\n//       headers: {\r\n//         Authorization: `Bearer ${token}`\r\n//       }\r\n//     });\r\n\r\n//     // Generate a fake order ID\r\n//     const generatedOrderId = Math.floor(Math.random() * 1000000);\r\n\r\n//     // Update order ID in state\r\n//     setOrderId(generatedOrderId);\r\n//     alert(\"Payment Successful! Your order has been placed.\");\r\n//     clearCart(); // Clear cart after payment\r\n    \r\n//     // Reset payment form\r\n//     setCardNumber('');\r\n//     setExpiry('');\r\n//     setCvv('');\r\n//     setCardHolder('');\r\n//     setPaymentError('');\r\n    \r\n//     // Navigate to order history page to see the new order\r\n//     navigate('/orders');\r\n//   } catch (error) {\r\n//     console.error('Error placing order:', error);\r\n//     setPaymentError('Error processing payment. Please try again.');\r\n//   }\r\n// };\r\n//   return (\r\n//     <div className=\"p-6\">\r\n//       <h2 className=\"text-3xl font-bold mb-4\">Your Cart</h2>\r\n\r\n//       <div>\r\n//         {cartItems.map((item) => (\r\n//           <div key={item._id} className=\"flex justify-between items-center mb-4 bg-gray-800 p-4 rounded-lg\">\r\n//             <div className=\"flex items-center\">\r\n//               <img\r\n//                 src={item.image || 'https://via.placeholder.com/150'}\r\n//                 alt={item.name}\r\n//                 className=\"w-16 h-16 object-cover rounded-md\"\r\n//               />\r\n//               <div className=\"ml-4\">\r\n//                 <h3 className=\"text-lg font-semibold text-teal-400\">{item.name}</h3>\r\n//                 <p className=\"text-sm text-gray-300\">{item.description}</p>\r\n//               </div>\r\n//             </div>\r\n//             <div className=\"flex items-center gap-4\">\r\n//               <button\r\n//                 onClick={() => updateQuantity(item._id, 'decrement')}\r\n//                 className=\"px-2 py-1 bg-teal-600 text-white rounded-full\"\r\n//               >\r\n//                 -\r\n//               </button>\r\n//               <span className=\"text-xl font-semibold text-white\">{item.quantity}</span>\r\n//               <button\r\n//                 onClick={() => updateQuantity(item._id, 'increment')}\r\n//                 className=\"px-2 py-1 bg-teal-600 text-white rounded-full\"\r\n//               >\r\n//                 +\r\n//               </button>\r\n//               <span className=\"text-xl\">${(item.price * item.quantity).toFixed(2)}</span>\r\n//               <button\r\n//                 onClick={() => removeFromCart(item._id)}\r\n//                 className=\"px-4 py-2 bg-red-600 text-white rounded-full\"\r\n//               >\r\n//                 Remove\r\n//               </button>\r\n//             </div>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n\r\n//       <div className=\"mt-6\">\r\n//         <label htmlFor=\"promoCode\" className=\"text-lg font-semibold\">Have a promo code?</label>\r\n//         <div className=\"flex items-center gap-2 mt-2\">\r\n//           <input\r\n//             type=\"text\"\r\n//             id=\"promoCode\"\r\n//             value={promoCode}\r\n//             onChange={(e) => setPromoCode(e.target.value)}\r\n//             className=\"p-2 rounded-lg bg-gray-700 text-white\"\r\n//             placeholder=\"Enter promo code\"\r\n//           />\r\n//           <button\r\n//             onClick={handlePromoCodeSubmit}\r\n//             className=\"px-4 py-2 bg-teal-600 text-white rounded-full\"\r\n//           >\r\n//             Apply\r\n//           </button>\r\n//         </div>\r\n//         {promoError && <p className=\"text-red-500 mt-2\">{promoError}</p>}\r\n//       </div>\r\n\r\n//       <div className=\"flex justify-between items-center mt-4\">\r\n//         <p className=\"text-xl font-bold\">Total: ${total.toFixed(2)}</p>\r\n//         {discount > 0 && (\r\n//           <p className=\"text-lg text-green-500\">Discount: -${(total * (discount / 100)).toFixed(2)}</p>\r\n//         )}\r\n//       </div>\r\n//       <div className=\"flex justify-between items-center mt-4\">\r\n//         <p className=\"text-xl font-bold\">Total After Discount: ${discountedTotal.toFixed(2)}</p>\r\n//       </div>\r\n\r\n//       {/* Payment Section */}\r\n//       <div className=\"mt-8 p-6 bg-gray-900 rounded-lg\">\r\n//         <h2 className=\"text-2xl font-bold mb-4 text-white\">Payment Details</h2>\r\n\r\n//         <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Card Number\"\r\n//             className=\"p-2 rounded bg-gray-700 text-white\"\r\n//             value={cardNumber}\r\n//             onChange={(e) => setCardNumber(e.target.value)}\r\n//           />\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Expiry Date (MM/YY)\"\r\n//             className=\"p-2 rounded bg-gray-700 text-white\"\r\n//             value={expiry}\r\n//             onChange={(e) => setExpiry(e.target.value)}\r\n//           />\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"CVV\"\r\n//             className=\"p-2 rounded bg-gray-700 text-white\"\r\n//             value={cvv}\r\n//             onChange={(e) => setCvv(e.target.value)}\r\n//           />\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Cardholder Name\"\r\n//             className=\"p-2 rounded bg-gray-700 text-white\"\r\n//             value={cardHolder}\r\n//             onChange={(e) => setCardHolder(e.target.value)}\r\n//           />\r\n//         </div>\r\n\r\n//         {paymentError && (\r\n//           <p className=\"text-red-500 mt-2\">{paymentError}</p>\r\n//         )}\r\n\r\n//         <button\r\n//           onClick={handlePayment}\r\n//           className=\"mt-4 px-6 py-2 bg-green-600 text-white rounded-full\"\r\n//         >\r\n//           Place Order\r\n//         </button>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Cart;\r\n// Update Cart.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useCart } from '../context/CartContext';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Cart = () => {\r\n  const { cartItems, removeFromCart, updateQuantity, clearCart } = useCart();\r\n  const [promoCode, setPromoCode] = useState('');\r\n  const [discount, setDiscount] = useState(0);\r\n  const [discountType, setDiscountType] = useState('percentage'); // Add discount type\r\n  const [promoError, setPromoError] = useState('');\r\n  const [promoSuccess, setPromoSuccess] = useState(''); // Add success message\r\n  const [cardNumber, setCardNumber] = useState('');\r\n  const [expiry, setExpiry] = useState('');\r\n  const [cvv, setCvv] = useState('');\r\n  const [cardHolder, setCardHolder] = useState('');\r\n  const [paymentError, setPaymentError] = useState('');\r\n  const [orderId, setOrderId] = useState(null);\r\n  const [userDiscounts, setUserDiscounts] = useState([]); // Store user's available discounts\r\n  const [appliedDiscountId, setAppliedDiscountId] = useState(null); // Track applied discount\r\n  \r\n  const navigate = useNavigate();\r\n\r\n  // Fetch user's available discounts when component mounts\r\n  useEffect(() => {\r\n    fetchUserDiscounts();\r\n  }, []);\r\n\r\n  const fetchUserDiscounts = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) return;\r\n\r\n      const response = await axios.get('http://localhost:3001/discounts', {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n      \r\n      setUserDiscounts(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching user discounts:', error);\r\n    }\r\n  };\r\n\r\n  if (!cartItems || cartItems.length === 0) {\r\n    return (\r\n      <div className=\"flex justify-center items-center h-64\">\r\n        <p className=\"text-xl text-red-500\">Your cart is empty!</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const total = cartItems.reduce((acc, item) => acc + item.price * item.quantity, 0);\r\n  \r\n  // Calculate discounted total based on discount type\r\n  const discountedTotal = discountType === 'percentage' \r\n    ? total - (total * (discount / 100)) \r\n    : total - discount;\r\n\r\n  const handlePromoCodeSubmit = async () => {\r\n    // Reset states\r\n    setPromoError('');\r\n    setPromoSuccess('');\r\n    setDiscount(0);\r\n    setDiscountType('percentage');\r\n    setAppliedDiscountId(null);\r\n    \r\n    // First check hardcoded promo codes (for backward compatibility)\r\n    const hardcodedPromoCodes = {\r\n      \"SAVE10\": { amount: 10, type: 'percentage' },\r\n      \"SAVE20\": { amount: 20, type: 'percentage' },\r\n      \"FREESHIP\": { amount: 5, type: 'percentage' }\r\n    };\r\n    \r\n    if (hardcodedPromoCodes[promoCode]) {\r\n      setDiscount(hardcodedPromoCodes[promoCode].amount);\r\n      setDiscountType(hardcodedPromoCodes[promoCode].type);\r\n      setPromoSuccess(`Applied! ${hardcodedPromoCodes[promoCode].amount}% discount`);\r\n      return;\r\n    }\r\n    \r\n    // Check against user's available discounts\r\n    const matchingDiscount = userDiscounts.find(d => d.code === promoCode);\r\n    \r\n    if (matchingDiscount) {\r\n      setDiscount(matchingDiscount.amount);\r\n      setDiscountType(matchingDiscount.type);\r\n      setAppliedDiscountId(matchingDiscount._id);\r\n      \r\n      const discountMsg = matchingDiscount.type === 'percentage' \r\n        ? `${matchingDiscount.amount}% discount` \r\n        : `$${matchingDiscount.amount} discount`;\r\n        \r\n      setPromoSuccess(`Applied! ${discountMsg}`);\r\n    } else {\r\n      setPromoError('Invalid promo code');\r\n      setDiscount(0);\r\n    }\r\n  };\r\n\r\n  const handlePayment = async () => {\r\n    if (!cardNumber || !expiry || !cvv || !cardHolder) {\r\n      setPaymentError(\"Please fill out all payment fields.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Get user's token for authorization\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        navigate('/login');\r\n        return;\r\n      }\r\n\r\n      // Get user profile to get delivery address\r\n      const profileResponse = await axios.get('http://localhost:3001/profile', {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n      \r\n      const userAddress = profileResponse.data.address;\r\n\r\n      // Create order items array from cart items\r\n      const orderItems = cartItems.map(item => ({\r\n        foodItem: item._id,\r\n        quantity: item.quantity,\r\n        price: item.price\r\n      }));\r\n      \r\n      // Calculate total amount (with or without discount)\r\n      const totalAmount = discount > 0 ? discountedTotal : total;\r\n\r\n      // Create the order\r\n      const orderResponse = await axios.post('http://localhost:3001/orders', {\r\n        items: orderItems,\r\n        totalAmount,\r\n        deliveryAddress: userAddress,\r\n        paymentMethod: \"Credit Card\",\r\n        appliedDiscountId // Include the discount ID if one was applied\r\n      }, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      // If a discount was applied, mark it as used\r\n      if (appliedDiscountId) {\r\n        await axios.put(`http://localhost:3001/discounts/${appliedDiscountId}/use`, {}, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`\r\n          }\r\n        });\r\n      }\r\n\r\n      // Update order ID in state\r\n      setOrderId(orderResponse.data.order._id);\r\n      alert(\"Payment Successful! Your order has been placed.\");\r\n      clearCart(); // Clear cart after payment\r\n      \r\n      // Reset payment form\r\n      setCardNumber('');\r\n      setExpiry('');\r\n      setCvv('');\r\n      setCardHolder('');\r\n      setPaymentError('');\r\n      \r\n      // Navigate to order history page to see the new order\r\n      navigate('/orders');\r\n    } catch (error) {\r\n      console.error('Error placing order:', error);\r\n      setPaymentError('Error processing payment. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <h2 className=\"text-3xl font-bold mb-4\">Your Cart</h2>\r\n\r\n      <div>\r\n        {cartItems.map((item) => (\r\n          <div key={item._id} className=\"flex justify-between items-center mb-4 bg-gray-800 p-4 rounded-lg\">\r\n            <div className=\"flex items-center\">\r\n              <img\r\n                src={item.image || 'https://via.placeholder.com/150'}\r\n                alt={item.name}\r\n                className=\"w-16 h-16 object-cover rounded-md\"\r\n              />\r\n              <div className=\"ml-4\">\r\n                <h3 className=\"text-lg font-semibold text-teal-400\">{item.name}</h3>\r\n                <p className=\"text-sm text-gray-300\">{item.description}</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex items-center gap-4\">\r\n              <button\r\n                onClick={() => updateQuantity(item._id, 'decrement')}\r\n                className=\"px-2 py-1 bg-teal-600 text-white rounded-full\"\r\n                disabled={item.quantity <= 1}\r\n              >\r\n                -\r\n              </button>\r\n              <span className=\"text-xl font-semibold text-white\">{item.quantity}</span>\r\n              <button\r\n                onClick={() => updateQuantity(item._id, 'increment')}\r\n                className=\"px-2 py-1 bg-teal-600 text-white rounded-full\"\r\n              >\r\n                +\r\n              </button>\r\n              <span className=\"text-xl\">${(item.price * item.quantity).toFixed(2)}</span>\r\n              <button\r\n                onClick={() => removeFromCart(item._id)}\r\n                className=\"px-4 py-2 bg-red-600 text-white rounded-full\"\r\n              >\r\n                Remove\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"mt-6\">\r\n        <label htmlFor=\"promoCode\" className=\"text-lg font-semibold\">Have a promo code?</label>\r\n        <div className=\"flex items-center gap-2 mt-2\">\r\n          <input\r\n            type=\"text\"\r\n            id=\"promoCode\"\r\n            value={promoCode}\r\n            onChange={(e) => setPromoCode(e.target.value)}\r\n            className=\"p-2 rounded-lg bg-gray-700 text-white\"\r\n            placeholder=\"Enter promo code\"\r\n          />\r\n          <button\r\n            onClick={handlePromoCodeSubmit}\r\n            className=\"px-4 py-2 bg-teal-600 text-white rounded-full\"\r\n          >\r\n            Apply\r\n          </button>\r\n        </div>\r\n        {promoError && <p className=\"text-red-500 mt-2\">{promoError}</p>}\r\n        {promoSuccess && <p className=\"text-green-500 mt-2\">{promoSuccess}</p>}\r\n      </div>\r\n\r\n      <div className=\"flex justify-between items-center mt-4\">\r\n        <p className=\"text-xl font-bold\">Total: ${total.toFixed(2)}</p>\r\n        {discount > 0 && (\r\n          <p className=\"text-lg text-green-500\">\r\n            Discount: {discountType === 'percentage' ? \r\n              `-${discount}% (-$${(total * (discount / 100)).toFixed(2)})` : \r\n              `-$${discount.toFixed(2)}`}\r\n          </p>\r\n        )}\r\n      </div>\r\n      <div className=\"flex justify-between items-center mt-4\">\r\n        <p className=\"text-xl font-bold\">Total After Discount: ${discountedTotal.toFixed(2)}</p>\r\n      </div>\r\n\r\n      {/* Payment Section */}\r\n      <div className=\"mt-8 p-6 bg-gray-900 rounded-lg\">\r\n        <h2 className=\"text-2xl font-bold mb-4 text-white\">Payment Details</h2>\r\n\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Card Number\"\r\n            className=\"p-2 rounded bg-gray-700 text-white\"\r\n            value={cardNumber}\r\n            onChange={(e) => setCardNumber(e.target.value)}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Expiry Date (MM/YY)\"\r\n            className=\"p-2 rounded bg-gray-700 text-white\"\r\n            value={expiry}\r\n            onChange={(e) => setExpiry(e.target.value)}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"CVV\"\r\n            className=\"p-2 rounded bg-gray-700 text-white\"\r\n            value={cvv}\r\n            onChange={(e) => setCvv(e.target.value)}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Cardholder Name\"\r\n            className=\"p-2 rounded bg-gray-700 text-white\"\r\n            value={cardHolder}\r\n            onChange={(e) => setCardHolder(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        {paymentError && (\r\n          <p className=\"text-red-500 mt-2\">{paymentError}</p>\r\n        )}\r\n\r\n        <button\r\n          onClick={handlePayment}\r\n          className=\"mt-4 px-6 py-2 bg-green-600 text-white rounded-full\"\r\n        >\r\n          Place Order\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cart;"],"mappings":";;AAAA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}