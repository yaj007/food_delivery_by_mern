{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n\n// function AdminDashboard() {\n//     const [foodItems, setFoodItems] = useState([]);\n//     const [loading, setLoading] = useState(true);\n//     const [error, setError] = useState(null);\n//     const [formData, setFormData] = useState({\n//         name: '',\n//         description: '',\n//         price: '',\n//         category: '',\n//         image: '',\n//     });\n//     const [isEditing, setIsEditing] = useState(false);\n//     const [currentItemId, setCurrentItemId] = useState(null);\n\n//     const navigate = useNavigate();\n\n//     useEffect(() => {\n//         fetchFoodItems();\n//     }, []);\n\n//     const fetchFoodItems = async () => {\n//         try {\n//             setLoading(true);\n//             const token = localStorage.getItem('token');\n//             if (!token) {\n//                 navigate('/login');\n//                 return;\n//             }\n\n//             const response = await axios.get('http://localhost:3001/food-items');\n//             setFoodItems(response.data);\n//             setLoading(false);\n//         } catch (error) {\n//             console.error('Error fetching food items:', error);\n//             setError('Failed to fetch food items');\n//             setLoading(false);\n//         }\n//     };\n\n//     const handleChange = (e) => {\n//         const { name, value } = e.target;\n//         setFormData({\n//             ...formData,\n//             [name]: name === 'price' ? parseFloat(value) : value,\n//         });\n//     };\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n//         try {\n//             const token = localStorage.getItem('token');\n//             if (!token) {\n//                 navigate('/login');\n//                 return;\n//             }\n\n//             if (isEditing) {\n//                 await axios.put(`http://localhost:3001/food-items/${currentItemId}`, formData, {\n//                     headers: {\n//                         Authorization: `Bearer ${token}`,\n//                     },\n//                 });\n//                 setIsEditing(false);\n//                 setCurrentItemId(null);\n//             } else {\n//                 await axios.post('http://localhost:3001/food-items', formData, {\n//                     headers: {\n//                         Authorization: `Bearer ${token}`,\n//                     },\n//                 });\n//             }\n\n//             // Reset form and refresh food items\n//             setFormData({\n//                 name: '',\n//                 description: '',\n//                 price: '',\n//                 category: '',\n//                 image: '',\n//             });\n//             fetchFoodItems();\n//         } catch (error) {\n//             console.error('Error saving food item:', error);\n//             setError('Failed to save food item');\n//         }\n//     };\n\n//     const handleEdit = (item) => {\n//         setFormData({\n//             name: item.name,\n//             description: item.description,\n//             price: item.price,\n//             category: item.category,\n//             image: item.image,\n//         });\n//         setIsEditing(true);\n//         setCurrentItemId(item._id);\n//     };\n\n//     const handleDelete = async (id) => {\n//         try {\n//             const token = localStorage.getItem('token');\n//             if (!token) {\n//                 navigate('/login');\n//                 return;\n//             }\n\n//             await axios.delete(`http://localhost:3001/food-items/${id}`, {\n//                 headers: {\n//                     Authorization: `Bearer ${token}`,\n//                 },\n//             });\n//             fetchFoodItems();\n//         } catch (error) {\n//             console.error('Error deleting food item:', error);\n//             setError('Failed to delete food item');\n//         }\n//     };\n\n//     const handleLogout = () => {\n//         localStorage.removeItem('token');\n//         navigate('/login');\n//     };\n\n//     return (\n//         <div className=\"min-h-screen bg-gray-900 text-white p-6\">\n//             <div className=\"max-w-6xl mx-auto\">\n//                 <div className=\"flex justify-between items-center mb-8\">\n//                     <h1 className=\"text-3xl font-bold text-teal-400\">Admin Dashboard</h1>\n//                     <button \n//                         onClick={handleLogout} \n//                         className=\"bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-lg\"\n//                     >\n//                         Logout\n//                     </button>\n//                 </div>\n\n//                 <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n//                     {/* Add/Edit Food Item Form */}\n//                     <div className=\"lg:col-span-1\">\n//                         <div className=\"bg-gray-800 p-6 rounded-lg shadow-lg\">\n//                             <h2 className=\"text-xl font-semibold mb-4 text-teal-400\">\n//                                 {isEditing ? 'Edit Food Item' : 'Add New Food Item'}\n//                             </h2>\n//                             {error && <p className=\"text-red-500 mb-4\">{error}</p>}\n//                             <form onSubmit={handleSubmit}>\n//                                 <div className=\"mb-4\">\n//                                     <label className=\"block text-sm font-medium mb-1\">Name</label>\n//                                     <input\n//                                         type=\"text\"\n//                                         name=\"name\"\n//                                         value={formData.name}\n//                                         onChange={handleChange}\n//                                         className=\"w-full p-2 bg-gray-700 rounded-lg focus:ring-2 focus:ring-teal-500 focus:outline-none\"\n//                                         required\n//                                     />\n//                                 </div>\n//                                 <div className=\"mb-4\">\n//                                     <label className=\"block text-sm font-medium mb-1\">Description</label>\n//                                     <textarea\n//                                         name=\"description\"\n//                                         value={formData.description}\n//                                         onChange={handleChange}\n//                                         className=\"w-full p-2 bg-gray-700 rounded-lg focus:ring-2 focus:ring-teal-500 focus:outline-none\"\n//                                         rows=\"3\"\n//                                         required\n//                                     ></textarea>\n//                                 </div>\n//                                 <div className=\"mb-4\">\n//                                     <label className=\"block text-sm font-medium mb-1\">Price</label>\n//                                     <input\n//                                         type=\"number\"\n//                                         name=\"price\"\n//                                         value={formData.price}\n//                                         onChange={handleChange}\n//                                         className=\"w-full p-2 bg-gray-700 rounded-lg focus:ring-2 focus:ring-teal-500 focus:outline-none\"\n//                                         step=\"0.01\"\n//                                         required\n//                                     />\n//                                 </div>\n//                                 <div className=\"mb-4\">\n//                                     <label className=\"block text-sm font-medium mb-1\">Category</label>\n//                                     <select\n//                                         name=\"category\"\n//                                         value={formData.category}\n//                                         onChange={handleChange}\n//                                         className=\"w-full p-2 bg-gray-700 rounded-lg focus:ring-2 focus:ring-teal-500 focus:outline-none\"\n//                                         required\n//                                     >\n//                                         <option value=\"\">Select Category</option>\n//                                         <option value=\"Appetizer\">Appetizer</option>\n//                                         <option value=\"Main Course\">Main Course</option>\n//                                         <option value=\"Dessert\">Dessert</option>\n//                                         <option value=\"Beverage\">Beverage</option>\n//                                     </select>\n//                                 </div>\n//                                 <div className=\"mb-4\">\n//                                     <label className=\"block text-sm font-medium mb-1\">Image URL</label>\n//                                     <input\n//                                         type=\"text\"\n//                                         name=\"image\"\n//                                         value={formData.image}\n//                                         onChange={handleChange}\n//                                         className=\"w-full p-2 bg-gray-700 rounded-lg focus:ring-2 focus:ring-teal-500 focus:outline-none\"\n//                                         placeholder=\"https://example.com/image.jpg\"\n//                                     />\n//                                 </div>\n//                                 <div className=\"flex gap-2\">\n//                                     <button\n//                                         type=\"submit\"\n//                                         className=\"w-full p-2 bg-teal-600 hover:bg-teal-700 rounded-lg transition duration-300\"\n//                                     >\n//                                         {isEditing ? 'Update Item' : 'Add Item'}\n//                                     </button>\n//                                     {isEditing && (\n//                                         <button\n//                                             type=\"button\"\n//                                             onClick={() => {\n//                                                 setIsEditing(false);\n//                                                 setCurrentItemId(null);\n//                                                 setFormData({\n//                                                     name: '',\n//                                                     description: '',\n//                                                     price: '',\n//                                                     category: '',\n//                                                     image: '',\n//                                                 });\n//                                             }}\n//                                             className=\"w-full p-2 bg-gray-600 hover:bg-gray-700 rounded-lg transition duration-300\"\n//                                         >\n//                                             Cancel\n//                                         </button>\n//                                     )}\n//                                 </div>\n//                             </form>\n//                         </div>\n//                     </div>\n\n//                     {/* Food Items List */}\n//                     <div className=\"lg:col-span-2\">\n//                         <div className=\"bg-gray-800 p-6 rounded-lg shadow-lg\">\n//                             <h2 className=\"text-xl font-semibold mb-4 text-teal-400\">Food Items</h2>\n//                             {loading ? (\n//                                 <p>Loading food items...</p>\n//                             ) : foodItems.length === 0 ? (\n//                                 <p>No food items found. Add some items to get started.</p>\n//                             ) : (\n//                                 <div className=\"overflow-x-auto\">\n//                                     <table className=\"min-w-full divide-y divide-gray-700\">\n//                                         <thead>\n//                                             <tr>\n//                                                 <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\">\n//                                                     Name\n//                                                 </th>\n//                                                 <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\">\n//                                                     Category\n//                                                 </th>\n//                                                 <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\">\n//                                                     Price\n//                                                 </th>\n//                                                 <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\">\n//                                                     Actions\n//                                                 </th>\n//                                             </tr>\n//                                         </thead>\n//                                         <tbody className=\"divide-y divide-gray-700\">\n//                                             {foodItems.map((item) => (\n//                                                 <tr key={item._id}>\n//                                                     <td className=\"px-4 py-3 whitespace-nowrap\">{item.name}</td>\n//                                                     <td className=\"px-4 py-3 whitespace-nowrap\">{item.category}</td>\n//                                                     <td className=\"px-4 py-3 whitespace-nowrap\">${item.price.toFixed(2)}</td>\n//                                                     <td className=\"px-4 py-3 whitespace-nowrap\">\n//                                                         <div className=\"flex gap-2\">\n//                                                             <button\n//                                                                 onClick={() => handleEdit(item)}\n//                                                                 className=\"px-3 py-1 bg-blue-600 hover:bg-blue-700 rounded-md\"\n//                                                             >\n//                                                                 Edit\n//                                                             </button>\n//                                                             <button\n//                                                                 onClick={() => handleDelete(item._id)}\n//                                                                 className=\"px-3 py-1 bg-red-600 hover:bg-red-700 rounded-md\"\n//                                                             >\n//                                                                 Delete\n//                                                             </button>\n//                                                         </div>\n//                                                     </td>\n//                                                 </tr>\n//                                             ))}\n//                                         </tbody>\n//                                     </table>\n//                                 </div>\n//                             )}\n//                         </div>\n//                     </div>\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default AdminDashboard;","map":{"version":3,"names":[],"sources":["E:/11TH/CSE470 project/food_delivery_by_mern/food_delivery/Frontend/src/pages/AdminDashboard.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// function AdminDashboard() {\r\n//     const [foodItems, setFoodItems] = useState([]);\r\n//     const [loading, setLoading] = useState(true);\r\n//     const [error, setError] = useState(null);\r\n//     const [formData, setFormData] = useState({\r\n//         name: '',\r\n//         description: '',\r\n//         price: '',\r\n//         category: '',\r\n//         image: '',\r\n//     });\r\n//     const [isEditing, setIsEditing] = useState(false);\r\n//     const [currentItemId, setCurrentItemId] = useState(null);\r\n\r\n//     const navigate = useNavigate();\r\n\r\n//     useEffect(() => {\r\n//         fetchFoodItems();\r\n//     }, []);\r\n\r\n//     const fetchFoodItems = async () => {\r\n//         try {\r\n//             setLoading(true);\r\n//             const token = localStorage.getItem('token');\r\n//             if (!token) {\r\n//                 navigate('/login');\r\n//                 return;\r\n//             }\r\n\r\n//             const response = await axios.get('http://localhost:3001/food-items');\r\n//             setFoodItems(response.data);\r\n//             setLoading(false);\r\n//         } catch (error) {\r\n//             console.error('Error fetching food items:', error);\r\n//             setError('Failed to fetch food items');\r\n//             setLoading(false);\r\n//         }\r\n//     };\r\n\r\n//     const handleChange = (e) => {\r\n//         const { name, value } = e.target;\r\n//         setFormData({\r\n//             ...formData,\r\n//             [name]: name === 'price' ? parseFloat(value) : value,\r\n//         });\r\n//     };\r\n\r\n//     const handleSubmit = async (e) => {\r\n//         e.preventDefault();\r\n//         try {\r\n//             const token = localStorage.getItem('token');\r\n//             if (!token) {\r\n//                 navigate('/login');\r\n//                 return;\r\n//             }\r\n\r\n//             if (isEditing) {\r\n//                 await axios.put(`http://localhost:3001/food-items/${currentItemId}`, formData, {\r\n//                     headers: {\r\n//                         Authorization: `Bearer ${token}`,\r\n//                     },\r\n//                 });\r\n//                 setIsEditing(false);\r\n//                 setCurrentItemId(null);\r\n//             } else {\r\n//                 await axios.post('http://localhost:3001/food-items', formData, {\r\n//                     headers: {\r\n//                         Authorization: `Bearer ${token}`,\r\n//                     },\r\n//                 });\r\n//             }\r\n\r\n//             // Reset form and refresh food items\r\n//             setFormData({\r\n//                 name: '',\r\n//                 description: '',\r\n//                 price: '',\r\n//                 category: '',\r\n//                 image: '',\r\n//             });\r\n//             fetchFoodItems();\r\n//         } catch (error) {\r\n//             console.error('Error saving food item:', error);\r\n//             setError('Failed to save food item');\r\n//         }\r\n//     };\r\n\r\n//     const handleEdit = (item) => {\r\n//         setFormData({\r\n//             name: item.name,\r\n//             description: item.description,\r\n//             price: item.price,\r\n//             category: item.category,\r\n//             image: item.image,\r\n//         });\r\n//         setIsEditing(true);\r\n//         setCurrentItemId(item._id);\r\n//     };\r\n\r\n//     const handleDelete = async (id) => {\r\n//         try {\r\n//             const token = localStorage.getItem('token');\r\n//             if (!token) {\r\n//                 navigate('/login');\r\n//                 return;\r\n//             }\r\n\r\n//             await axios.delete(`http://localhost:3001/food-items/${id}`, {\r\n//                 headers: {\r\n//                     Authorization: `Bearer ${token}`,\r\n//                 },\r\n//             });\r\n//             fetchFoodItems();\r\n//         } catch (error) {\r\n//             console.error('Error deleting food item:', error);\r\n//             setError('Failed to delete food item');\r\n//         }\r\n//     };\r\n\r\n//     const handleLogout = () => {\r\n//         localStorage.removeItem('token');\r\n//         navigate('/login');\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"min-h-screen bg-gray-900 text-white p-6\">\r\n//             <div className=\"max-w-6xl mx-auto\">\r\n//                 <div className=\"flex justify-between items-center mb-8\">\r\n//                     <h1 className=\"text-3xl font-bold text-teal-400\">Admin Dashboard</h1>\r\n//                     <button \r\n//                         onClick={handleLogout} \r\n//                         className=\"bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-lg\"\r\n//                     >\r\n//                         Logout\r\n//                     </button>\r\n//                 </div>\r\n\r\n//                 <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\r\n//                     {/* Add/Edit Food Item Form */}\r\n//                     <div className=\"lg:col-span-1\">\r\n//                         <div className=\"bg-gray-800 p-6 rounded-lg shadow-lg\">\r\n//                             <h2 className=\"text-xl font-semibold mb-4 text-teal-400\">\r\n//                                 {isEditing ? 'Edit Food Item' : 'Add New Food Item'}\r\n//                             </h2>\r\n//                             {error && <p className=\"text-red-500 mb-4\">{error}</p>}\r\n//                             <form onSubmit={handleSubmit}>\r\n//                                 <div className=\"mb-4\">\r\n//                                     <label className=\"block text-sm font-medium mb-1\">Name</label>\r\n//                                     <input\r\n//                                         type=\"text\"\r\n//                                         name=\"name\"\r\n//                                         value={formData.name}\r\n//                                         onChange={handleChange}\r\n//                                         className=\"w-full p-2 bg-gray-700 rounded-lg focus:ring-2 focus:ring-teal-500 focus:outline-none\"\r\n//                                         required\r\n//                                     />\r\n//                                 </div>\r\n//                                 <div className=\"mb-4\">\r\n//                                     <label className=\"block text-sm font-medium mb-1\">Description</label>\r\n//                                     <textarea\r\n//                                         name=\"description\"\r\n//                                         value={formData.description}\r\n//                                         onChange={handleChange}\r\n//                                         className=\"w-full p-2 bg-gray-700 rounded-lg focus:ring-2 focus:ring-teal-500 focus:outline-none\"\r\n//                                         rows=\"3\"\r\n//                                         required\r\n//                                     ></textarea>\r\n//                                 </div>\r\n//                                 <div className=\"mb-4\">\r\n//                                     <label className=\"block text-sm font-medium mb-1\">Price</label>\r\n//                                     <input\r\n//                                         type=\"number\"\r\n//                                         name=\"price\"\r\n//                                         value={formData.price}\r\n//                                         onChange={handleChange}\r\n//                                         className=\"w-full p-2 bg-gray-700 rounded-lg focus:ring-2 focus:ring-teal-500 focus:outline-none\"\r\n//                                         step=\"0.01\"\r\n//                                         required\r\n//                                     />\r\n//                                 </div>\r\n//                                 <div className=\"mb-4\">\r\n//                                     <label className=\"block text-sm font-medium mb-1\">Category</label>\r\n//                                     <select\r\n//                                         name=\"category\"\r\n//                                         value={formData.category}\r\n//                                         onChange={handleChange}\r\n//                                         className=\"w-full p-2 bg-gray-700 rounded-lg focus:ring-2 focus:ring-teal-500 focus:outline-none\"\r\n//                                         required\r\n//                                     >\r\n//                                         <option value=\"\">Select Category</option>\r\n//                                         <option value=\"Appetizer\">Appetizer</option>\r\n//                                         <option value=\"Main Course\">Main Course</option>\r\n//                                         <option value=\"Dessert\">Dessert</option>\r\n//                                         <option value=\"Beverage\">Beverage</option>\r\n//                                     </select>\r\n//                                 </div>\r\n//                                 <div className=\"mb-4\">\r\n//                                     <label className=\"block text-sm font-medium mb-1\">Image URL</label>\r\n//                                     <input\r\n//                                         type=\"text\"\r\n//                                         name=\"image\"\r\n//                                         value={formData.image}\r\n//                                         onChange={handleChange}\r\n//                                         className=\"w-full p-2 bg-gray-700 rounded-lg focus:ring-2 focus:ring-teal-500 focus:outline-none\"\r\n//                                         placeholder=\"https://example.com/image.jpg\"\r\n//                                     />\r\n//                                 </div>\r\n//                                 <div className=\"flex gap-2\">\r\n//                                     <button\r\n//                                         type=\"submit\"\r\n//                                         className=\"w-full p-2 bg-teal-600 hover:bg-teal-700 rounded-lg transition duration-300\"\r\n//                                     >\r\n//                                         {isEditing ? 'Update Item' : 'Add Item'}\r\n//                                     </button>\r\n//                                     {isEditing && (\r\n//                                         <button\r\n//                                             type=\"button\"\r\n//                                             onClick={() => {\r\n//                                                 setIsEditing(false);\r\n//                                                 setCurrentItemId(null);\r\n//                                                 setFormData({\r\n//                                                     name: '',\r\n//                                                     description: '',\r\n//                                                     price: '',\r\n//                                                     category: '',\r\n//                                                     image: '',\r\n//                                                 });\r\n//                                             }}\r\n//                                             className=\"w-full p-2 bg-gray-600 hover:bg-gray-700 rounded-lg transition duration-300\"\r\n//                                         >\r\n//                                             Cancel\r\n//                                         </button>\r\n//                                     )}\r\n//                                 </div>\r\n//                             </form>\r\n//                         </div>\r\n//                     </div>\r\n\r\n//                     {/* Food Items List */}\r\n//                     <div className=\"lg:col-span-2\">\r\n//                         <div className=\"bg-gray-800 p-6 rounded-lg shadow-lg\">\r\n//                             <h2 className=\"text-xl font-semibold mb-4 text-teal-400\">Food Items</h2>\r\n//                             {loading ? (\r\n//                                 <p>Loading food items...</p>\r\n//                             ) : foodItems.length === 0 ? (\r\n//                                 <p>No food items found. Add some items to get started.</p>\r\n//                             ) : (\r\n//                                 <div className=\"overflow-x-auto\">\r\n//                                     <table className=\"min-w-full divide-y divide-gray-700\">\r\n//                                         <thead>\r\n//                                             <tr>\r\n//                                                 <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\">\r\n//                                                     Name\r\n//                                                 </th>\r\n//                                                 <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\">\r\n//                                                     Category\r\n//                                                 </th>\r\n//                                                 <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\">\r\n//                                                     Price\r\n//                                                 </th>\r\n//                                                 <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\">\r\n//                                                     Actions\r\n//                                                 </th>\r\n//                                             </tr>\r\n//                                         </thead>\r\n//                                         <tbody className=\"divide-y divide-gray-700\">\r\n//                                             {foodItems.map((item) => (\r\n//                                                 <tr key={item._id}>\r\n//                                                     <td className=\"px-4 py-3 whitespace-nowrap\">{item.name}</td>\r\n//                                                     <td className=\"px-4 py-3 whitespace-nowrap\">{item.category}</td>\r\n//                                                     <td className=\"px-4 py-3 whitespace-nowrap\">${item.price.toFixed(2)}</td>\r\n//                                                     <td className=\"px-4 py-3 whitespace-nowrap\">\r\n//                                                         <div className=\"flex gap-2\">\r\n//                                                             <button\r\n//                                                                 onClick={() => handleEdit(item)}\r\n//                                                                 className=\"px-3 py-1 bg-blue-600 hover:bg-blue-700 rounded-md\"\r\n//                                                             >\r\n//                                                                 Edit\r\n//                                                             </button>\r\n//                                                             <button\r\n//                                                                 onClick={() => handleDelete(item._id)}\r\n//                                                                 className=\"px-3 py-1 bg-red-600 hover:bg-red-700 rounded-md\"\r\n//                                                             >\r\n//                                                                 Delete\r\n//                                                             </button>\r\n//                                                         </div>\r\n//                                                     </td>\r\n//                                                 </tr>\r\n//                                             ))}\r\n//                                         </tbody>\r\n//                                     </table>\r\n//                                 </div>\r\n//                             )}\r\n//                         </div>\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default AdminDashboard;"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}